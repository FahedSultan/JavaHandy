<?xml version="1.0" encoding="UTF-8"?>

<BugCollection version="3.0.1" sequence="0" timestamp="1446025975576" analysisTimestamp="1446025975587" release="">
  <Project projectName="">
    <Jar>D:\gegdc\SV40298\Workspace\codequality\bin</Jar>
  </Project>
  <BugInstance type="DMI_HARDCODED_ABSOLUTE_FILENAME" priority="2" rank="17" abbrev="DMI" category="STYLE" instanceHash="2e54dd56624ae61fdee8bc8db30ec82" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="440">
    <ShortMessage>Code contains a hard coded reference to an absolute pathname</ShortMessage>
    <LongMessage>Hard coded reference to an absolute pathname in io.sudheer.practice.Builder.main(String[])</LongMessage>
    <Class classname="io.sudheer.practice.Builder" primary="true">
      <SourceLine classname="io.sudheer.practice.Builder" start="12" end="46" sourcefile="Builder.java" sourcepath="com/ge/sample/Builder.java">
        <Message>At Builder.java:[lines 12-46]</Message>
      </SourceLine>
      <Message>In class io.sudheer.practice.Builder</Message>
    </Class>
    <Method classname="io.sudheer.practice.Builder" name="main" signature="([Ljava/lang/String;)V" isStatic="true" primary="true">
      <SourceLine classname="io.sudheer.practice.Builder" start="16" end="33" startBytecode="0" endBytecode="74" sourcefile="Builder.java" sourcepath="com/ge/sample/Builder.java"/>
      <Message>In method io.sudheer.practice.Builder.main(String[])</Message>
    </Method>
    <String value="D:/gegdc/SV40298/jboss4.0.3/server/default/log/opt/shared/data/tdmdataaccess/temp/javaOut.tzf" role="FILE_NAME">
      <Message>File name D:/gegdc/SV40298/jboss4.0.3/server/default/log/opt/shared/data/tdmdataaccess/temp/javaOut.tzf</Message>
    </String>
    <SourceLine classname="io.sudheer.practice.Builder" primary="true" start="18" end="18" startBytecode="47" endBytecode="47" sourcefile="Builder.java" sourcepath="com/ge/sample/Builder.java">
      <Message>At Builder.java:[line 18]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DMI_HARDCODED_ABSOLUTE_FILENAME" priority="2" rank="17" abbrev="DMI" category="STYLE" instanceHash="649448a0bde1dde0ac617c3febf77472" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="440">
    <ShortMessage>Code contains a hard coded reference to an absolute pathname</ShortMessage>
    <LongMessage>Hard coded reference to an absolute pathname in io.sudheer.practice.Builder.main(String[])</LongMessage>
    <Class classname="io.sudheer.practice.Builder" primary="true">
      <SourceLine classname="io.sudheer.practice.Builder" start="12" end="46" sourcefile="Builder.java" sourcepath="com/ge/sample/Builder.java">
        <Message>At Builder.java:[lines 12-46]</Message>
      </SourceLine>
      <Message>In class io.sudheer.practice.Builder</Message>
    </Class>
    <Method classname="io.sudheer.practice.Builder" name="main" signature="([Ljava/lang/String;)V" isStatic="true" primary="true">
      <SourceLine classname="io.sudheer.practice.Builder" start="16" end="33" startBytecode="0" endBytecode="74" sourcefile="Builder.java" sourcepath="com/ge/sample/Builder.java"/>
      <Message>In method io.sudheer.practice.Builder.main(String[])</Message>
    </Method>
    <String value="D:/gegdc/SV40298/jboss4.0.3/server/default/log/opt/shared/data/tdmdataaccess/temp/javaOut2.tzf" role="FILE_NAME">
      <Message>File name D:/gegdc/SV40298/jboss4.0.3/server/default/log/opt/shared/data/tdmdataaccess/temp/javaOut2.tzf</Message>
    </String>
    <SourceLine classname="io.sudheer.practice.Builder" primary="true" start="17" end="17" startBytecode="37" endBytecode="37" sourcefile="Builder.java" sourcepath="com/ge/sample/Builder.java">
      <Message>At Builder.java:[line 17]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DMI_HARDCODED_ABSOLUTE_FILENAME" priority="2" rank="17" abbrev="DMI" category="STYLE" instanceHash="81cf342b7c33d998a20c5b0a3299c5ef" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="440">
    <ShortMessage>Code contains a hard coded reference to an absolute pathname</ShortMessage>
    <LongMessage>Hard coded reference to an absolute pathname in io.sudheer.practice.CheckEnv.main(String[])</LongMessage>
    <Class classname="io.sudheer.practice.CheckEnv" primary="true">
      <SourceLine classname="io.sudheer.practice.CheckEnv" start="17" end="59" sourcefile="CheckEnv.java" sourcepath="com/ge/sample/CheckEnv.java">
        <Message>At CheckEnv.java:[lines 17-59]</Message>
      </SourceLine>
      <Message>In class io.sudheer.practice.CheckEnv</Message>
    </Class>
    <Method classname="io.sudheer.practice.CheckEnv" name="main" signature="([Ljava/lang/String;)V" isStatic="true" primary="true">
      <SourceLine classname="io.sudheer.practice.CheckEnv" start="27" end="59" startBytecode="0" endBytecode="78" sourcefile="CheckEnv.java" sourcepath="com/ge/sample/CheckEnv.java"/>
      <Message>In method io.sudheer.practice.CheckEnv.main(String[])</Message>
    </Method>
    <String value="D://gegdc//SV40298//WorkSpace//sample//src//environment.xml" role="FILE_NAME">
      <Message>File name D://gegdc//SV40298//WorkSpace//sample//src//environment.xml</Message>
    </String>
    <SourceLine classname="io.sudheer.practice.CheckEnv" primary="true" start="27" end="27" startBytecode="6" endBytecode="6" sourcefile="CheckEnv.java" sourcepath="com/ge/sample/CheckEnv.java">
      <Message>At CheckEnv.java:[line 27]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DMI_HARDCODED_ABSOLUTE_FILENAME" priority="2" rank="17" abbrev="DMI" category="STYLE" instanceHash="bebb66428ca0ad1441f83bb400240abc" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="440">
    <ShortMessage>Code contains a hard coded reference to an absolute pathname</ShortMessage>
    <LongMessage>Hard coded reference to an absolute pathname in io.sudheer.practice.Compress.main(String[])</LongMessage>
    <Class classname="io.sudheer.practice.Compress" primary="true">
      <SourceLine classname="io.sudheer.practice.Compress" start="12" end="41" sourcefile="Compress.java" sourcepath="com/ge/sample/Compress.java">
        <Message>At Compress.java:[lines 12-41]</Message>
      </SourceLine>
      <Message>In class io.sudheer.practice.Compress</Message>
    </Class>
    <Method classname="io.sudheer.practice.Compress" name="main" signature="([Ljava/lang/String;)V" isStatic="true" primary="true">
      <SourceLine classname="io.sudheer.practice.Compress" start="16" end="41" startBytecode="0" endBytecode="83" sourcefile="Compress.java" sourcepath="com/ge/sample/Compress.java"/>
      <Message>In method io.sudheer.practice.Compress.main(String[])</Message>
    </Method>
    <String value="D:/gegdc/SV40298/tmp/1.gzip" role="FILE_NAME">
      <Message>File name D:/gegdc/SV40298/tmp/1.gzip</Message>
    </String>
    <SourceLine classname="io.sudheer.practice.Compress" primary="true" start="20" end="20" startBytecode="12" endBytecode="12" sourcefile="Compress.java" sourcepath="com/ge/sample/Compress.java">
      <Message>At Compress.java:[line 20]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DLS_DEAD_LOCAL_STORE" priority="2" rank="17" abbrev="DLS" category="STYLE" instanceHash="19a26073453cf8d2aa79b8ebef42ffdb" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="563">
    <ShortMessage>Dead store to local variable</ShortMessage>
    <LongMessage>Dead store to b in io.sudheer.practice.Compress2.main(String[])</LongMessage>
    <Class classname="io.sudheer.practice.Compress2" primary="true">
      <SourceLine classname="io.sudheer.practice.Compress2" start="7" end="100" sourcefile="Compress2.java" sourcepath="com/ge/sample/Compress2.java">
        <Message>At Compress2.java:[lines 7-100]</Message>
      </SourceLine>
      <Message>In class io.sudheer.practice.Compress2</Message>
    </Class>
    <Method classname="io.sudheer.practice.Compress2" name="main" signature="([Ljava/lang/String;)V" isStatic="true" primary="true">
      <SourceLine classname="io.sudheer.practice.Compress2" start="9" end="26" startBytecode="0" endBytecode="6" sourcefile="Compress2.java" sourcepath="com/ge/sample/Compress2.java"/>
      <Message>In method io.sudheer.practice.Compress2.main(String[])</Message>
    </Method>
    <LocalVariable name="b" register="2" pc="11" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named b</Message>
    </LocalVariable>
    <SourceLine classname="io.sudheer.practice.Compress2" primary="true" start="25" end="25" startBytecode="10" endBytecode="10" sourcefile="Compress2.java" sourcepath="com/ge/sample/Compress2.java">
      <Message>At Compress2.java:[line 25]</Message>
    </SourceLine>
    <Property name="edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.LOCAL_NAME" value="b"/>
    <Property name="edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.METHOD_RESULT" value="true"/>
    <Property name="edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.NO_LOADS" value="true"/>
  </BugInstance>
  <BugInstance type="DMI_INVOKING_TOSTRING_ON_ARRAY" priority="2" rank="10" abbrev="USELESS_STRING" category="CORRECTNESS" instanceHash="af2ed05cbbc5bdfaba6bcfcc591572b6" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Invocation of toString on an array</ShortMessage>
    <LongMessage>Invocation of toString on bytesCompressed in io.sudheer.practice.Compress2.compress(byte[])</LongMessage>
    <Class classname="io.sudheer.practice.Compress2" primary="true">
      <SourceLine classname="io.sudheer.practice.Compress2" start="7" end="100" sourcefile="Compress2.java" sourcepath="com/ge/sample/Compress2.java">
        <Message>At Compress2.java:[lines 7-100]</Message>
      </SourceLine>
      <Message>In class io.sudheer.practice.Compress2</Message>
    </Class>
    <Method classname="io.sudheer.practice.Compress2" name="compress" signature="([B)[B" isStatic="true" primary="true">
      <SourceLine classname="io.sudheer.practice.Compress2" start="38" end="60" startBytecode="0" endBytecode="246" sourcefile="Compress2.java" sourcepath="com/ge/sample/Compress2.java"/>
      <Message>In method io.sudheer.practice.Compress2.compress(byte[])</Message>
    </Method>
    <LocalVariable name="bytesCompressed" register="2" pc="84" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named bytesCompressed</Message>
    </LocalVariable>
    <SourceLine classname="io.sudheer.practice.Compress2" primary="true" start="57" end="57" startBytecode="84" endBytecode="84" sourcefile="Compress2.java" sourcepath="com/ge/sample/Compress2.java">
      <Message>At Compress2.java:[line 57]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_DEFAULT_ENCODING" priority="1" rank="19" abbrev="Dm" category="I18N" instanceHash="aa7fbef0b06d9526a7b30465243c5f84" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Reliance on default encoding</ShortMessage>
    <LongMessage>Found reliance on default encoding in io.sudheer.practice.Compress2.main(String[]): String.getBytes()</LongMessage>
    <Class classname="io.sudheer.practice.Compress2" primary="true">
      <SourceLine classname="io.sudheer.practice.Compress2" start="7" end="100" sourcefile="Compress2.java" sourcepath="com/ge/sample/Compress2.java">
        <Message>At Compress2.java:[lines 7-100]</Message>
      </SourceLine>
      <Message>In class io.sudheer.practice.Compress2</Message>
    </Class>
    <Method classname="io.sudheer.practice.Compress2" name="main" signature="([Ljava/lang/String;)V" isStatic="true" primary="true">
      <SourceLine classname="io.sudheer.practice.Compress2" start="9" end="26" startBytecode="0" endBytecode="81" sourcefile="Compress2.java" sourcepath="com/ge/sample/Compress2.java"/>
      <Message>In method io.sudheer.practice.Compress2.main(String[])</Message>
    </Method>
    <Method classname="java.lang.String" name="getBytes" signature="()[B" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.lang.String" start="956" end="956" startBytecode="0" endBytecode="37" sourcefile="String.java" sourcepath="java/lang/String.java"/>
      <Message>Called method String.getBytes()</Message>
    </Method>
    <SourceLine classname="io.sudheer.practice.Compress2" primary="true" start="25" end="25" startBytecode="4" endBytecode="4" sourcefile="Compress2.java" sourcepath="com/ge/sample/Compress2.java">
      <Message>At Compress2.java:[line 25]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="SBSC_USE_STRINGBUFFER_CONCATENATION" priority="2" rank="18" abbrev="SBSC" category="PERFORMANCE" instanceHash="d1c48fa4c565b30d1fffbd3a7139e20f" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method concatenates strings using + in a loop</ShortMessage>
    <LongMessage>com.ge.sample.Console.writeBytesAsHexadecimal(byte[]) concatenates strings using + in a loop</LongMessage>
    <Class classname="com.ge.sample.Console" primary="true">
      <SourceLine classname="com.ge.sample.Console" start="165" end="237" sourcefile="CompressionTest.java" sourcepath="com/ge/sample/CompressionTest.java">
        <Message>At CompressionTest.java:[lines 165-237]</Message>
      </SourceLine>
      <Message>In class com.ge.sample.Console</Message>
    </Class>
    <Method classname="com.ge.sample.Console" name="writeBytesAsHexadecimal" signature="([B)V" isStatic="true" primary="true">
      <SourceLine classname="com.ge.sample.Console" start="169" end="237" startBytecode="0" endBytecode="695" sourcefile="CompressionTest.java" sourcepath="com/ge/sample/CompressionTest.java"/>
      <Message>In method com.ge.sample.Console.writeBytesAsHexadecimal(byte[])</Message>
    </Method>
    <SourceLine classname="com.ge.sample.Console" primary="true" start="189" end="189" startBytecode="55" endBytecode="55" sourcefile="CompressionTest.java" sourcepath="com/ge/sample/CompressionTest.java">
      <Message>At CompressionTest.java:[line 189]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_DEFAULT_ENCODING" priority="1" rank="19" abbrev="Dm" category="I18N" instanceHash="40fc37f55f11bddcea87615579052769" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Reliance on default encoding</ShortMessage>
    <LongMessage>Found reliance on default encoding in io.sudheer.practice.CountLines.countLines(String, String): new
        java.io.FileReader(String)</LongMessage>
    <Class classname="io.sudheer.practice.CountLines" primary="true">
      <SourceLine classname="io.sudheer.practice.CountLines" start="11" end="47" sourcefile="CountLines.java" sourcepath="com/ge/sample/CountLines.java">
        <Message>At CountLines.java:[lines 11-47]</Message>
      </SourceLine>
      <Message>In class io.sudheer.practice.CountLines</Message>
    </Class>
    <Method classname="io.sudheer.practice.CountLines" name="countLines" signature="(Ljava/lang/String;Ljava/lang/String;)I" isStatic="true" primary="true">
      <SourceLine classname="io.sudheer.practice.CountLines" start="31" end="39" startBytecode="0" endBytecode="211" sourcefile="CountLines.java" sourcepath="com/ge/sample/CountLines.java"/>
      <Message>In method io.sudheer.practice.CountLines.countLines(String, String)</Message>
    </Method>
    <Method classname="java.io.FileReader" name="&lt;init&gt;" signature="(Ljava/lang/String;)V" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.io.FileReader" start="58" end="59" startBytecode="0" endBytecode="40" sourcefile="FileReader.java" sourcepath="java/io/FileReader.java"/>
      <Message>Called method new java.io.FileReader(String)</Message>
    </Method>
    <SourceLine classname="io.sudheer.practice.CountLines" primary="true" start="31" end="31" startBytecode="9" endBytecode="9" sourcefile="CountLines.java" sourcepath="com/ge/sample/CountLines.java">
      <Message>At CountLines.java:[line 31]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_DEFAULT_ENCODING" priority="1" rank="19" abbrev="Dm" category="I18N" instanceHash="43d9fee3f3be0a63edd2dc8d8ef6a905" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Reliance on default encoding</ShortMessage>
    <LongMessage>Found reliance on default encoding in io.sudheer.practice.CountLines.countLinesUsingProcess(String):
        new java.io.FileReader(File)</LongMessage>
    <Class classname="io.sudheer.practice.CountLines" primary="true">
      <SourceLine classname="io.sudheer.practice.CountLines" start="11" end="47" sourcefile="CountLines.java" sourcepath="com/ge/sample/CountLines.java">
        <Message>At CountLines.java:[lines 11-47]</Message>
      </SourceLine>
      <Message>In class io.sudheer.practice.CountLines</Message>
    </Class>
    <Method classname="io.sudheer.practice.CountLines" name="countLinesUsingProcess" signature="(Ljava/lang/String;)I" isStatic="true" primary="true">
      <SourceLine classname="io.sudheer.practice.CountLines" start="43" end="47" startBytecode="0" endBytecode="119" sourcefile="CountLines.java" sourcepath="com/ge/sample/CountLines.java"/>
      <Message>In method io.sudheer.practice.CountLines.countLinesUsingProcess(String)</Message>
    </Method>
    <Method classname="java.io.FileReader" name="&lt;init&gt;" signature="(Ljava/io/File;)V" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.io.FileReader" start="72" end="73" startBytecode="0" endBytecode="40" sourcefile="FileReader.java" sourcepath="java/io/FileReader.java"/>
      <Message>Called method new java.io.FileReader(File)</Message>
    </Method>
    <SourceLine classname="io.sudheer.practice.CountLines" primary="true" start="43" end="43" startBytecode="16" endBytecode="16" sourcefile="CountLines.java" sourcepath="com/ge/sample/CountLines.java">
      <Message>At CountLines.java:[line 43]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="SR_NOT_CHECKED" priority="2" rank="16" abbrev="RR" category="BAD_PRACTICE" instanceHash="995fb2d021933364b75d7131f47ace7c" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method ignores results of InputStream.skip()</ShortMessage>
    <LongMessage>io.sudheer.practice.CountLines.countLinesUsingProcess(String) ignores result of
        java.io.LineNumberReader.skip(long)</LongMessage>
    <Class classname="io.sudheer.practice.CountLines" primary="true">
      <SourceLine classname="io.sudheer.practice.CountLines" start="11" end="47" sourcefile="CountLines.java" sourcepath="com/ge/sample/CountLines.java">
        <Message>At CountLines.java:[lines 11-47]</Message>
      </SourceLine>
      <Message>In class io.sudheer.practice.CountLines</Message>
    </Class>
    <Method classname="io.sudheer.practice.CountLines" name="countLinesUsingProcess" signature="(Ljava/lang/String;)I" isStatic="true" primary="true">
      <SourceLine classname="io.sudheer.practice.CountLines" start="43" end="47" startBytecode="0" endBytecode="119" sourcefile="CountLines.java" sourcepath="com/ge/sample/CountLines.java"/>
      <Message>In method io.sudheer.practice.CountLines.countLinesUsingProcess(String)</Message>
    </Method>
    <Method classname="java.io.LineNumberReader" name="skip" signature="(J)J" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.io.LineNumberReader" start="228" end="242" startBytecode="0" endBytecode="262" sourcefile="LineNumberReader.java" sourcepath="java/io/LineNumberReader.java"/>
      <Message>Called method java.io.LineNumberReader.skip(long)</Message>
    </Method>
    <SourceLine classname="io.sudheer.practice.CountLines" primary="true" start="44" end="44" startBytecode="27" endBytecode="27" sourcefile="CountLines.java" sourcepath="com/ge/sample/CountLines.java">
      <Message>At CountLines.java:[line 44]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="NP_NULL_PARAM_DEREF" priority="2" rank="8" abbrev="NP" category="CORRECTNESS" instanceHash="aa8cc9174a4bf9ac7792f8b5be577e1f" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="476">
    <ShortMessage>Method call passes null for non-null parameter</ShortMessage>
    <LongMessage>Null passed for non-null parameter of java.util.Calendar.setTime(Date) in
        io.sudheer.practice.DateFormat.main(String[])</LongMessage>
    <Class classname="io.sudheer.practice.DateFormat" primary="true">
      <SourceLine classname="io.sudheer.practice.DateFormat" start="16" end="38" sourcefile="DateFormat.java" sourcepath="com/ge/sample/DateFormat.java">
        <Message>At DateFormat.java:[lines 16-38]</Message>
      </SourceLine>
      <Message>In class io.sudheer.practice.DateFormat</Message>
    </Class>
    <Method classname="io.sudheer.practice.DateFormat" name="main" signature="([Ljava/lang/String;)V" isStatic="true" primary="true">
      <SourceLine classname="io.sudheer.practice.DateFormat" start="23" end="38" startBytecode="0" endBytecode="315" sourcefile="DateFormat.java" sourcepath="com/ge/sample/DateFormat.java"/>
      <Message>In method io.sudheer.practice.DateFormat.main(String[])</Message>
    </Method>
    <Method classname="java.util.Calendar" name="setTime" signature="(Ljava/util/Date;)V" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.util.Calendar" start="1106" end="1107" startBytecode="0" endBytecode="36" sourcefile="Calendar.java" sourcepath="java/util/Calendar.java"/>
      <Message>Called method java.util.Calendar.setTime(Date)</Message>
    </Method>
    <Int value="1" role="INT_MAYBE_NULL_ARG">
      <Message>Argument 1 might be null but must not be null</Message>
    </Int>
    <LocalVariable name="date" register="3" pc="21" role="LOCAL_VARIABLE_VALUE_OF">
      <Message>Value loaded from date</Message>
    </LocalVariable>
    <SourceLine classname="io.sudheer.practice.DateFormat" primary="true" start="35" end="35" startBytecode="46" endBytecode="46" sourcefile="DateFormat.java" sourcepath="com/ge/sample/DateFormat.java" role="SOURCE_LINE_INVOKED">
      <Message>Method invoked at DateFormat.java:[line 35]</Message>
    </SourceLine>
    <SourceLine classname="io.sudheer.practice.DateFormat" start="25" end="25" startBytecode="13" endBytecode="13" sourcefile="DateFormat.java" sourcepath="com/ge/sample/DateFormat.java" role="SOURCE_LINE_NULL_VALUE">
      <Message>Null value at DateFormat.java:[line 25]</Message>
    </SourceLine>
    <SourceLine classname="io.sudheer.practice.DateFormat" start="28" end="28" startBytecode="24" endBytecode="24" sourcefile="DateFormat.java" sourcepath="com/ge/sample/DateFormat.java" role="SOURCE_LINE_KNOWN_NULL">
      <Message>Known null at DateFormat.java:[line 28]</Message>
    </SourceLine>
    <SourceLine classname="io.sudheer.practice.DateFormat" start="30" end="30" startBytecode="28" endBytecode="28" sourcefile="DateFormat.java" sourcepath="com/ge/sample/DateFormat.java" role="SOURCE_LINE_KNOWN_NULL">
      <Message>Known null at DateFormat.java:[line 30]</Message>
    </SourceLine>
    <Property name="edu.umd.cs.findbugs.detect.NullDerefProperty.ALWAYS_ON_EXCEPTION_PATH" value="true"/>
  </BugInstance>
  <BugInstance type="DLS_DEAD_LOCAL_STORE" priority="2" rank="17" abbrev="DLS" category="STYLE" instanceHash="77faf30804eafa4c7e7bd79de637172" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="563">
    <ShortMessage>Dead store to local variable</ShortMessage>
    <LongMessage>Dead store to ival in io.sudheer.practice.GetIntRange.proceedForTokens(String)</LongMessage>
    <Class classname="io.sudheer.practice.GetIntRange" primary="true">
      <SourceLine classname="io.sudheer.practice.GetIntRange" start="18" end="209" sourcefile="GetIntRange.java" sourcepath="com/ge/sample/GetIntRange.java">
        <Message>At GetIntRange.java:[lines 18-209]</Message>
      </SourceLine>
      <Message>In class io.sudheer.practice.GetIntRange</Message>
    </Class>
    <Method classname="io.sudheer.practice.GetIntRange" name="proceedForTokens" signature="(Ljava/lang/String;)Z" isStatic="true" primary="true">
      <SourceLine classname="io.sudheer.practice.GetIntRange" start="29" end="38" startBytecode="0" endBytecode="21" sourcefile="GetIntRange.java" sourcepath="com/ge/sample/GetIntRange.java"/>
      <Message>In method io.sudheer.practice.GetIntRange.proceedForTokens(String)</Message>
    </Method>
    <LocalVariable name="ival" register="2" pc="8" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named ival</Message>
    </LocalVariable>
    <SourceLine classname="io.sudheer.practice.GetIntRange" primary="true" start="31" end="31" startBytecode="7" endBytecode="7" sourcefile="GetIntRange.java" sourcepath="com/ge/sample/GetIntRange.java">
      <Message>At GetIntRange.java:[line 31]</Message>
    </SourceLine>
    <Property name="edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.BASE_VALUE" value="true"/>
    <Property name="edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.LOCAL_NAME" value="ival"/>
    <Property name="edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.NO_LOADS" value="true"/>
  </BugInstance>
  <BugInstance type="DM_BOXED_PRIMITIVE_TOSTRING" priority="1" rank="16" abbrev="Bx" category="PERFORMANCE" instanceHash="e45bfb4edf5ad407aac3426d91a07adf" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method allocates a boxed primitive just to call toString</ShortMessage>
    <LongMessage>Primitive boxed just to call toString in io.sudheer.practice.GetIntRange.getIntRange(String, String)</LongMessage>
    <Class classname="io.sudheer.practice.GetIntRange" primary="true">
      <SourceLine classname="io.sudheer.practice.GetIntRange" start="18" end="209" sourcefile="GetIntRange.java" sourcepath="com/ge/sample/GetIntRange.java">
        <Message>At GetIntRange.java:[lines 18-209]</Message>
      </SourceLine>
      <Message>In class io.sudheer.practice.GetIntRange</Message>
    </Class>
    <Method classname="io.sudheer.practice.GetIntRange" name="getIntRange" signature="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" isStatic="true" primary="true">
      <SourceLine classname="io.sudheer.practice.GetIntRange" start="42" end="209" startBytecode="0" endBytecode="2465" sourcefile="GetIntRange.java" sourcepath="com/ge/sample/GetIntRange.java"/>
      <Message>In method io.sudheer.practice.GetIntRange.getIntRange(String, String)</Message>
    </Method>
    <Method classname="java.lang.Integer" name="toString" signature="()Ljava/lang/String;" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.lang.Integer" start="739" end="739" startBytecode="0" endBytecode="31" sourcefile="Integer.java" sourcepath="java/lang/Integer.java"/>
      <Message>Called method Integer.toString()</Message>
    </Method>
    <Method classname="java.lang.Integer" name="toString" signature="(I)Ljava/lang/String;" isStatic="true" role="SHOULD_CALL">
      <Message>Should call Integer.toString(int) instead</Message>
    </Method>
    <SourceLine classname="io.sudheer.practice.GetIntRange" primary="true" start="119" end="119" startBytecode="592" endBytecode="592" sourcefile="GetIntRange.java" sourcepath="com/ge/sample/GetIntRange.java">
      <Message>At GetIntRange.java:[line 119]</Message>
    </SourceLine>
    <SourceLine classname="io.sudheer.practice.GetIntRange" start="124" end="124" startBytecode="692" endBytecode="692" sourcefile="GetIntRange.java" sourcepath="com/ge/sample/GetIntRange.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at GetIntRange.java:[line 124]</Message>
    </SourceLine>
    <SourceLine classname="io.sudheer.practice.GetIntRange" start="137" end="137" startBytecode="801" endBytecode="801" sourcefile="GetIntRange.java" sourcepath="com/ge/sample/GetIntRange.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at GetIntRange.java:[line 137]</Message>
    </SourceLine>
    <SourceLine classname="io.sudheer.practice.GetIntRange" start="144" end="144" startBytecode="894" endBytecode="894" sourcefile="GetIntRange.java" sourcepath="com/ge/sample/GetIntRange.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at GetIntRange.java:[line 144]</Message>
    </SourceLine>
    <SourceLine classname="io.sudheer.practice.GetIntRange" start="172" end="172" startBytecode="1119" endBytecode="1119" sourcefile="GetIntRange.java" sourcepath="com/ge/sample/GetIntRange.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at GetIntRange.java:[line 172]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DLS_DEAD_LOCAL_STORE" priority="2" rank="17" abbrev="DLS" category="STYLE" instanceHash="c0599660ae10d976104b0b287103dcf2" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="563">
    <ShortMessage>Dead store to local variable</ShortMessage>
    <LongMessage>Dead store to ival in io.sudheer.practice.GetRange.proceedForTokens(String)</LongMessage>
    <Class classname="io.sudheer.practice.GetRange" primary="true">
      <SourceLine classname="io.sudheer.practice.GetRange" start="9" end="206" sourcefile="GetRange.java" sourcepath="com/ge/sample/GetRange.java">
        <Message>At GetRange.java:[lines 9-206]</Message>
      </SourceLine>
      <Message>In class io.sudheer.practice.GetRange</Message>
    </Class>
    <Method classname="io.sudheer.practice.GetRange" name="proceedForTokens" signature="(Ljava/lang/String;)Z" isStatic="true" primary="true">
      <SourceLine classname="io.sudheer.practice.GetRange" start="198" end="206" startBytecode="0" endBytecode="11" sourcefile="GetRange.java" sourcepath="com/ge/sample/GetRange.java"/>
      <Message>In method io.sudheer.practice.GetRange.proceedForTokens(String)</Message>
    </Method>
    <LocalVariable name="ival" register="2" pc="8" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named ival</Message>
    </LocalVariable>
    <SourceLine classname="io.sudheer.practice.GetRange" primary="true" start="200" end="200" startBytecode="7" endBytecode="7" sourcefile="GetRange.java" sourcepath="com/ge/sample/GetRange.java">
      <Message>At GetRange.java:[line 200]</Message>
    </SourceLine>
    <Property name="edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.BASE_VALUE" value="true"/>
    <Property name="edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.LOCAL_NAME" value="ival"/>
    <Property name="edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.NO_LOADS" value="true"/>
  </BugInstance>
  <BugInstance type="DM_BOXED_PRIMITIVE_TOSTRING" priority="1" rank="16" abbrev="Bx" category="PERFORMANCE" instanceHash="14d7aff129ada74600a46708e15abf5" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method allocates a boxed primitive just to call toString</ShortMessage>
    <LongMessage>Primitive boxed just to call toString in io.sudheer.practice.GetRange.getIntRange(String, String)</LongMessage>
    <Class classname="io.sudheer.practice.GetRange" primary="true">
      <SourceLine classname="io.sudheer.practice.GetRange" start="9" end="206" sourcefile="GetRange.java" sourcepath="com/ge/sample/GetRange.java">
        <Message>At GetRange.java:[lines 9-206]</Message>
      </SourceLine>
      <Message>In class io.sudheer.practice.GetRange</Message>
    </Class>
    <Method classname="io.sudheer.practice.GetRange" name="getIntRange" signature="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" isStatic="true" primary="true">
      <SourceLine classname="io.sudheer.practice.GetRange" start="24" end="192" startBytecode="0" endBytecode="2566" sourcefile="GetRange.java" sourcepath="com/ge/sample/GetRange.java"/>
      <Message>In method io.sudheer.practice.GetRange.getIntRange(String, String)</Message>
    </Method>
    <Method classname="java.lang.Integer" name="toString" signature="()Ljava/lang/String;" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.lang.Integer" start="739" end="739" startBytecode="0" endBytecode="31" sourcefile="Integer.java" sourcepath="java/lang/Integer.java"/>
      <Message>Called method Integer.toString()</Message>
    </Method>
    <Method classname="java.lang.Integer" name="toString" signature="(I)Ljava/lang/String;" isStatic="true" role="SHOULD_CALL">
      <Message>Should call Integer.toString(int) instead</Message>
    </Method>
    <SourceLine classname="io.sudheer.practice.GetRange" primary="true" start="102" end="102" startBytecode="645" endBytecode="645" sourcefile="GetRange.java" sourcepath="com/ge/sample/GetRange.java">
      <Message>At GetRange.java:[line 102]</Message>
    </SourceLine>
    <SourceLine classname="io.sudheer.practice.GetRange" start="107" end="107" startBytecode="745" endBytecode="745" sourcefile="GetRange.java" sourcepath="com/ge/sample/GetRange.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at GetRange.java:[line 107]</Message>
    </SourceLine>
    <SourceLine classname="io.sudheer.practice.GetRange" start="120" end="120" startBytecode="854" endBytecode="854" sourcefile="GetRange.java" sourcepath="com/ge/sample/GetRange.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at GetRange.java:[line 120]</Message>
    </SourceLine>
    <SourceLine classname="io.sudheer.practice.GetRange" start="127" end="127" startBytecode="947" endBytecode="947" sourcefile="GetRange.java" sourcepath="com/ge/sample/GetRange.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at GetRange.java:[line 127]</Message>
    </SourceLine>
    <SourceLine classname="io.sudheer.practice.GetRange" start="155" end="155" startBytecode="1172" endBytecode="1172" sourcefile="GetRange.java" sourcepath="com/ge/sample/GetRange.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at GetRange.java:[line 155]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_NEXTINT_VIA_NEXTDOUBLE" priority="2" rank="18" abbrev="Dm" category="PERFORMANCE" instanceHash="689ccc06b96500d372b9aacef0652fff" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Use the nextInt method of Random rather than nextDouble to generate a random integer</ShortMessage>
    <LongMessage>io.sudheer.practice.MoveCursor.changeCursorLocation() uses the nextDouble method of Random to generate
        a random integer; using nextInt is more efficient</LongMessage>
    <Class classname="io.sudheer.practice.MoveCursor" primary="true">
      <SourceLine classname="io.sudheer.practice.MoveCursor" start="16" end="36" sourcefile="MoveCursor.java" sourcepath="com/ge/sample/MoveCursor.java">
        <Message>At MoveCursor.java:[lines 16-36]</Message>
      </SourceLine>
      <Message>In class io.sudheer.practice.MoveCursor</Message>
    </Class>
    <Method classname="io.sudheer.practice.MoveCursor" name="changeCursorLocation" signature="()V" isStatic="false" primary="true">
      <SourceLine classname="io.sudheer.practice.MoveCursor" start="24" end="34" startBytecode="0" endBytecode="214" sourcefile="MoveCursor.java" sourcepath="com/ge/sample/MoveCursor.java"/>
      <Message>In method io.sudheer.practice.MoveCursor.changeCursorLocation()</Message>
    </Method>
    <SourceLine classname="io.sudheer.practice.MoveCursor" primary="true" start="30" end="30" startBytecode="44" endBytecode="44" sourcefile="MoveCursor.java" sourcepath="com/ge/sample/MoveCursor.java">
      <Message>At MoveCursor.java:[line 30]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_DEFAULT_ENCODING" priority="1" rank="19" abbrev="Dm" category="I18N" instanceHash="198e286c54b29bf5ce05dea9389b8584" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Reliance on default encoding</ShortMessage>
    <LongMessage>Found reliance on default encoding in io.sudheer.practice.PrimeTest.main(String[]): new
        java.util.Scanner(InputStream)</LongMessage>
    <Class classname="io.sudheer.practice.PrimeTest" primary="true">
      <SourceLine classname="io.sudheer.practice.PrimeTest" start="5" end="35" sourcefile="PrimeTest.java" sourcepath="com/ge/sample/PrimeTest.java">
        <Message>At PrimeTest.java:[lines 5-35]</Message>
      </SourceLine>
      <Message>In class io.sudheer.practice.PrimeTest</Message>
    </Class>
    <Method classname="io.sudheer.practice.PrimeTest" name="main" signature="([Ljava/lang/String;)V" isStatic="true" primary="true">
      <SourceLine classname="io.sudheer.practice.PrimeTest" start="8" end="20" startBytecode="0" endBytecode="269" sourcefile="PrimeTest.java" sourcepath="com/ge/sample/PrimeTest.java"/>
      <Message>In method io.sudheer.practice.PrimeTest.main(String[])</Message>
    </Method>
    <Method classname="java.util.Scanner" name="&lt;init&gt;" signature="(Ljava/io/InputStream;)V" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.util.Scanner" start="608" end="609" startBytecode="0" endBytecode="43" sourcefile="Scanner.java" sourcepath="java/util/Scanner.java"/>
      <Message>Called method new java.util.Scanner(InputStream)</Message>
    </Method>
    <SourceLine classname="io.sudheer.practice.PrimeTest" primary="true" start="9" end="9" startBytecode="11" endBytecode="11" sourcefile="PrimeTest.java" sourcepath="com/ge/sample/PrimeTest.java">
      <Message>At PrimeTest.java:[line 9]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="IL_INFINITE_LOOP" priority="1" rank="8" abbrev="IL" category="CORRECTNESS" instanceHash="4fed553dff5c6cc42e0854d7e23cdf07" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>An apparent infinite loop</ShortMessage>
    <LongMessage>There is an apparent infinite loop in io.sudheer.practice.PrimeTest.isPrime(int, int)</LongMessage>
    <Class classname="io.sudheer.practice.PrimeTest" primary="true">
      <SourceLine classname="io.sudheer.practice.PrimeTest" start="5" end="35" sourcefile="PrimeTest.java" sourcepath="com/ge/sample/PrimeTest.java">
        <Message>At PrimeTest.java:[lines 5-35]</Message>
      </SourceLine>
      <Message>In class io.sudheer.practice.PrimeTest</Message>
    </Class>
    <Method classname="io.sudheer.practice.PrimeTest" name="isPrime" signature="(II)I" isStatic="true" primary="true">
      <SourceLine classname="io.sudheer.practice.PrimeTest" start="23" end="35" startBytecode="0" endBytecode="193" sourcefile="PrimeTest.java" sourcepath="com/ge/sample/PrimeTest.java"/>
      <Message>In method io.sudheer.practice.PrimeTest.isPrime(int, int)</Message>
    </Method>
    <SourceLine classname="io.sudheer.practice.PrimeTest" primary="true" start="24" end="24" startBytecode="6" endBytecode="6" sourcefile="PrimeTest.java" sourcepath="com/ge/sample/PrimeTest.java">
      <Message>At PrimeTest.java:[line 24]</Message>
    </SourceLine>
    <SourceLine classname="io.sudheer.practice.PrimeTest" start="34" end="34" startBytecode="45" endBytecode="45" sourcefile="PrimeTest.java" sourcepath="com/ge/sample/PrimeTest.java" role="SOURCE_LINE_LOOP_BOTTOM">
      <Message>Loop bottom at PrimeTest.java:[line 34]</Message>
    </SourceLine>
    <LocalVariable name="b" register="1" pc="6" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named b</Message>
    </LocalVariable>
    <SourceLine classname="io.sudheer.practice.PrimeTest" start="23" end="23" startBytecode="0" endBytecode="0" sourcefile="PrimeTest.java" sourcepath="com/ge/sample/PrimeTest.java" role="SOURCE_LINE_LAST_CHANGE">
      <Message>Last changed at PrimeTest.java:[line 23]</Message>
    </SourceLine>
    <LocalVariable name="a" register="0" pc="6" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named a</Message>
    </LocalVariable>
    <SourceLine classname="io.sudheer.practice.PrimeTest" start="23" end="23" startBytecode="0" endBytecode="0" sourcefile="PrimeTest.java" sourcepath="com/ge/sample/PrimeTest.java" role="SOURCE_LINE_LAST_CHANGE">
      <Message>Last changed at PrimeTest.java:[line 23]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="IL_INFINITE_LOOP" priority="1" rank="8" abbrev="IL" category="CORRECTNESS" instanceHash="14fbe1616103ddfb3154136f643cd92c" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>An apparent infinite loop</ShortMessage>
    <LongMessage>There is an apparent infinite loop in io.sudheer.practice.PrimeTest.main(String[])</LongMessage>
    <Class classname="io.sudheer.practice.PrimeTest" primary="true">
      <SourceLine classname="io.sudheer.practice.PrimeTest" start="5" end="35" sourcefile="PrimeTest.java" sourcepath="com/ge/sample/PrimeTest.java">
        <Message>At PrimeTest.java:[lines 5-35]</Message>
      </SourceLine>
      <Message>In class io.sudheer.practice.PrimeTest</Message>
    </Class>
    <Method classname="io.sudheer.practice.PrimeTest" name="main" signature="([Ljava/lang/String;)V" isStatic="true" primary="true">
      <SourceLine classname="io.sudheer.practice.PrimeTest" start="8" end="20" startBytecode="0" endBytecode="269" sourcefile="PrimeTest.java" sourcepath="com/ge/sample/PrimeTest.java"/>
      <Message>In method io.sudheer.practice.PrimeTest.main(String[])</Message>
    </Method>
    <SourceLine classname="io.sudheer.practice.PrimeTest" primary="true" start="13" end="13" startBytecode="42" endBytecode="42" sourcefile="PrimeTest.java" sourcepath="com/ge/sample/PrimeTest.java">
      <Message>At PrimeTest.java:[line 13]</Message>
    </SourceLine>
    <SourceLine classname="io.sudheer.practice.PrimeTest" start="17" end="17" startBytecode="102" endBytecode="102" sourcefile="PrimeTest.java" sourcepath="com/ge/sample/PrimeTest.java" role="SOURCE_LINE_LOOP_BOTTOM">
      <Message>Loop bottom at PrimeTest.java:[line 17]</Message>
    </SourceLine>
    <LocalVariable name="b" register="4" pc="42" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named b</Message>
    </LocalVariable>
    <SourceLine classname="io.sudheer.practice.PrimeTest" start="12" end="12" startBytecode="37" endBytecode="37" sourcefile="PrimeTest.java" sourcepath="com/ge/sample/PrimeTest.java" role="SOURCE_LINE_LAST_CHANGE">
      <Message>Last changed at PrimeTest.java:[line 12]</Message>
    </SourceLine>
    <LocalVariable name="a" register="3" pc="42" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named a</Message>
    </LocalVariable>
    <SourceLine classname="io.sudheer.practice.PrimeTest" start="11" end="11" startBytecode="32" endBytecode="32" sourcefile="PrimeTest.java" sourcepath="com/ge/sample/PrimeTest.java" role="SOURCE_LINE_LAST_CHANGE">
      <Message>Last changed at PrimeTest.java:[line 11]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="BX_UNBOXING_IMMEDIATELY_REBOXED" priority="2" rank="18" abbrev="Bx" category="PERFORMANCE" instanceHash="3051e6b278cbef92ea73b94e063df4d" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Boxed value is unboxed and then immediately reboxed</ShortMessage>
    <LongMessage>Boxed value is unboxed and then immediately reboxed in
        io.sudheer.practice.ReplaceWithMaxScan.replaceWithMaxScanNumber(String, int)</LongMessage>
    <Class classname="io.sudheer.practice.ReplaceWithMaxScan" primary="true">
      <SourceLine classname="io.sudheer.practice.ReplaceWithMaxScan" start="18" end="218" sourcefile="ReplaceWithMaxScan.java" sourcepath="com/ge/sample/ReplaceWithMaxScan.java">
        <Message>At ReplaceWithMaxScan.java:[lines 18-218]</Message>
      </SourceLine>
      <Message>In class io.sudheer.practice.ReplaceWithMaxScan</Message>
    </Class>
    <Method classname="io.sudheer.practice.ReplaceWithMaxScan" name="replaceWithMaxScanNumber" signature="(Ljava/lang/String;I)Ljava/lang/String;" isStatic="true" primary="true">
      <SourceLine classname="io.sudheer.practice.ReplaceWithMaxScan" start="36" end="60" startBytecode="0" endBytecode="442" sourcefile="ReplaceWithMaxScan.java" sourcepath="com/ge/sample/ReplaceWithMaxScan.java"/>
      <Message>In method io.sudheer.practice.ReplaceWithMaxScan.replaceWithMaxScanNumber(String, int)</Message>
    </Method>
    <Method classname="java.lang.Integer" name="valueOf" signature="(I)Ljava/lang/Integer;" isStatic="true" role="METHOD_CALLED">
      <SourceLine classname="java.lang.Integer" start="639" end="642" startBytecode="0" endBytecode="99" sourcefile="Integer.java" sourcepath="java/lang/Integer.java"/>
      <Message>Called method Integer.valueOf(int)</Message>
    </Method>
    <SourceLine classname="io.sudheer.practice.ReplaceWithMaxScan" primary="true" start="51" end="51" startBytecode="84" endBytecode="84" sourcefile="ReplaceWithMaxScan.java" sourcepath="com/ge/sample/ReplaceWithMaxScan.java">
      <Message>At ReplaceWithMaxScan.java:[line 51]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="NP_NULL_PARAM_DEREF_NONVIRTUAL" priority="1" rank="6" abbrev="NP" category="CORRECTNESS" instanceHash="2ba2bd6b800951b27a9a5ef69adfeb" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="476">
    <ShortMessage>Non-virtual method call passes null for non-null parameter</ShortMessage>
    <LongMessage>Non-virtual method call in com.ge.sample.SbAppend.main(String[]) passes null for non-null parameter of new StringBuilder(String)</LongMessage>
    <Class classname="com.ge.sample.SbAppend" primary="true">
      <SourceLine classname="com.ge.sample.SbAppend" start="3" end="16" sourcefile="SbAppend.java" sourcepath="com/ge/sample/SbAppend.java">
        <Message>At SbAppend.java:[lines 3-16]</Message>
      </SourceLine>
      <Message>In class com.ge.sample.SbAppend</Message>
    </Class>
    <Method classname="com.ge.sample.SbAppend" name="main" signature="([Ljava/lang/String;)V" isStatic="true" primary="true">
      <SourceLine classname="com.ge.sample.SbAppend" start="10" end="16" startBytecode="0" endBytecode="155" sourcefile="SbAppend.java" sourcepath="com/ge/sample/SbAppend.java"/>
      <Message>In method com.ge.sample.SbAppend.main(String[])</Message>
    </Method>
    <Method classname="java.lang.StringBuilder" name="&lt;init&gt;" signature="(Ljava/lang/String;)V" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.lang.StringBuilder" start="109" end="111" startBytecode="0" endBytecode="49" sourcefile="StringBuilder.java" sourcepath="java/lang/StringBuilder.java"/>
      <Message>Called method new StringBuilder(String)</Message>
    </Method>
    <SourceLine classname="com.ge.sample.SbAppend" primary="true" start="13" end="13" startBytecode="12" endBytecode="12" sourcefile="SbAppend.java" sourcepath="com/ge/sample/SbAppend.java">
      <Message>At SbAppend.java:[line 13]</Message>
    </SourceLine>
    <LocalVariable name="sso" register="1" pc="11" role="LOCAL_VARIABLE_VALUE_OF">
      <Message>Value loaded from sso</Message>
    </LocalVariable>
    <Int value="1" role="INT_NULL_ARG">
      <Message>Argument 1 is definitely null but must not be null</Message>
    </Int>
    <Property name="edu.umd.cs.findbugs.detect.NullArgumentWarningProperty.ACTUAL_PARAMETER_GUARANTEED_NULL" value="true"/>
    <Property name="edu.umd.cs.findbugs.detect.NullArgumentWarningProperty.ALL_DANGEROUS_TARGETS" value="true"/>
    <Property name="edu.umd.cs.findbugs.detect.NullArgumentWarningProperty.ARG_DEFINITELY_NULL" value="true"/>
    <Property name="edu.umd.cs.findbugs.detect.NullArgumentWarningProperty.MONOMORPHIC_CALL_SITE" value="true"/>
  </BugInstance>
  <BugInstance type="BX_UNBOXING_IMMEDIATELY_REBOXED" priority="2" rank="18" abbrev="Bx" category="PERFORMANCE" instanceHash="5ab3776253b603d2e39db040825be248" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Boxed value is unboxed and then immediately reboxed</ShortMessage>
    <LongMessage>Boxed value is unboxed and then immediately reboxed in io.sudheer.practice.ScanNumber.main(String[])</LongMessage>
    <Class classname="io.sudheer.practice.ScanNumber" primary="true">
      <SourceLine classname="io.sudheer.practice.ScanNumber" start="13" end="45" sourcefile="ScanNumber.java" sourcepath="com/ge/sample/ScanNumber.java">
        <Message>At ScanNumber.java:[lines 13-45]</Message>
      </SourceLine>
      <Message>In class io.sudheer.practice.ScanNumber</Message>
    </Class>
    <Method classname="io.sudheer.practice.ScanNumber" name="main" signature="([Ljava/lang/String;)V" isStatic="true" primary="true">
      <SourceLine classname="io.sudheer.practice.ScanNumber" start="20" end="45" startBytecode="0" endBytecode="459" sourcefile="ScanNumber.java" sourcepath="com/ge/sample/ScanNumber.java"/>
      <Message>In method io.sudheer.practice.ScanNumber.main(String[])</Message>
    </Method>
    <Method classname="java.lang.Integer" name="valueOf" signature="(I)Ljava/lang/Integer;" isStatic="true" role="METHOD_CALLED">
      <SourceLine classname="java.lang.Integer" start="639" end="642" startBytecode="0" endBytecode="99" sourcefile="Integer.java" sourcepath="java/lang/Integer.java"/>
      <Message>Called method Integer.valueOf(int)</Message>
    </Method>
    <SourceLine classname="io.sudheer.practice.ScanNumber" primary="true" start="36" end="36" startBytecode="112" endBytecode="112" sourcefile="ScanNumber.java" sourcepath="com/ge/sample/ScanNumber.java">
      <Message>At ScanNumber.java:[line 36]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DMI_HARDCODED_ABSOLUTE_FILENAME" priority="2" rank="17" abbrev="DMI" category="STYLE" instanceHash="86b151dd437e06998e5924349b4f5ab5" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="440">
    <ShortMessage>Code contains a hard coded reference to an absolute pathname</ShortMessage>
    <LongMessage>Hard coded reference to an absolute pathname in io.sudheer.practice.StreamCompress.main(String[])</LongMessage>
    <Class classname="io.sudheer.practice.StreamCompress" primary="true">
      <SourceLine classname="io.sudheer.practice.StreamCompress" start="6" end="61" sourcefile="StreamCompress.java" sourcepath="com/ge/sample/StreamCompress.java">
        <Message>At StreamCompress.java:[lines 6-61]</Message>
      </SourceLine>
      <Message>In class io.sudheer.practice.StreamCompress</Message>
    </Class>
    <Method classname="io.sudheer.practice.StreamCompress" name="main" signature="([Ljava/lang/String;)V" isStatic="true" primary="true">
      <SourceLine classname="io.sudheer.practice.StreamCompress" start="50" end="61" startBytecode="0" endBytecode="38" sourcefile="StreamCompress.java" sourcepath="com/ge/sample/StreamCompress.java"/>
      <Message>In method io.sudheer.practice.StreamCompress.main(String[])</Message>
    </Method>
    <String value="D:/gegdc/SV40298/ActiveProcess/ActiveProcessWorkSpace/sample/src/compressed.tzf" role="FILE_NAME">
      <Message>File name D:/gegdc/SV40298/ActiveProcess/ActiveProcessWorkSpace/sample/src/compressed.tzf</Message>
    </String>
    <SourceLine classname="io.sudheer.practice.StreamCompress" primary="true" start="52" end="52" startBytecode="13" endBytecode="13" sourcefile="StreamCompress.java" sourcepath="com/ge/sample/StreamCompress.java">
      <Message>At StreamCompress.java:[line 52]</Message>
    </SourceLine>
    <SourceLine classname="io.sudheer.practice.StreamCompress" start="58" end="58" startBytecode="39" endBytecode="39" sourcefile="StreamCompress.java" sourcepath="com/ge/sample/StreamCompress.java" role="SOURCE_LINE_ANOTHER_INSTANCE">
      <Message>Another occurrence at StreamCompress.java:[line 58]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DMI_HARDCODED_ABSOLUTE_FILENAME" priority="2" rank="17" abbrev="DMI" category="STYLE" instanceHash="3a141dde51aeed42da41cddc838b4f5e" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="440">
    <ShortMessage>Code contains a hard coded reference to an absolute pathname</ShortMessage>
    <LongMessage>Hard coded reference to an absolute pathname in io.sudheer.practice.StreamCompress.main(String[])</LongMessage>
    <Class classname="io.sudheer.practice.StreamCompress" primary="true">
      <SourceLine classname="io.sudheer.practice.StreamCompress" start="6" end="61" sourcefile="StreamCompress.java" sourcepath="com/ge/sample/StreamCompress.java">
        <Message>At StreamCompress.java:[lines 6-61]</Message>
      </SourceLine>
      <Message>In class io.sudheer.practice.StreamCompress</Message>
    </Class>
    <Method classname="io.sudheer.practice.StreamCompress" name="main" signature="([Ljava/lang/String;)V" isStatic="true" primary="true">
      <SourceLine classname="io.sudheer.practice.StreamCompress" start="50" end="61" startBytecode="0" endBytecode="38" sourcefile="StreamCompress.java" sourcepath="com/ge/sample/StreamCompress.java"/>
      <Message>In method io.sudheer.practice.StreamCompress.main(String[])</Message>
    </Method>
    <String value="D:/gegdc/SV40298/ActiveProcess/ActiveProcessWorkSpace/sample/src/decompressed.txt" role="FILE_NAME">
      <Message>File name D:/gegdc/SV40298/ActiveProcess/ActiveProcessWorkSpace/sample/src/decompressed.txt</Message>
    </String>
    <SourceLine classname="io.sudheer.practice.StreamCompress" primary="true" start="60" end="60" startBytecode="78" endBytecode="78" sourcefile="StreamCompress.java" sourcepath="com/ge/sample/StreamCompress.java">
      <Message>At StreamCompress.java:[line 60]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_DEFAULT_ENCODING" priority="1" rank="19" abbrev="Dm" category="I18N" instanceHash="ac4c5017cf2707deaeeb9559713e55b0" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Reliance on default encoding</ShortMessage>
    <LongMessage>Found reliance on default encoding in io.sudheer.practice.StreamCompress.compressString(String):
        String.getBytes()</LongMessage>
    <Class classname="io.sudheer.practice.StreamCompress" primary="true">
      <SourceLine classname="io.sudheer.practice.StreamCompress" start="6" end="61" sourcefile="StreamCompress.java" sourcepath="com/ge/sample/StreamCompress.java">
        <Message>At StreamCompress.java:[lines 6-61]</Message>
      </SourceLine>
      <Message>In class io.sudheer.practice.StreamCompress</Message>
    </Class>
    <Method classname="io.sudheer.practice.StreamCompress" name="compressString" signature="(Ljava/lang/String;)V" isStatic="true" primary="true">
      <SourceLine classname="io.sudheer.practice.StreamCompress" start="9" end="16" startBytecode="0" endBytecode="152" sourcefile="StreamCompress.java" sourcepath="com/ge/sample/StreamCompress.java"/>
      <Message>In method io.sudheer.practice.StreamCompress.compressString(String)</Message>
    </Method>
    <Method classname="java.lang.String" name="getBytes" signature="()[B" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.lang.String" start="956" end="956" startBytecode="0" endBytecode="37" sourcefile="String.java" sourcepath="java/lang/String.java"/>
      <Message>Called method String.getBytes()</Message>
    </Method>
    <SourceLine classname="io.sudheer.practice.StreamCompress" primary="true" start="11" end="11" startBytecode="16" endBytecode="16" sourcefile="StreamCompress.java" sourcepath="com/ge/sample/StreamCompress.java">
      <Message>At StreamCompress.java:[line 11]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_DEFAULT_ENCODING" priority="1" rank="19" abbrev="Dm" category="I18N" instanceHash="f40e68bc75c451ebc69b13e69d8e029c" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Reliance on default encoding</ShortMessage>
    <LongMessage>Found reliance on default encoding in io.sudheer.practice.StreamCompress.compressStringToFile(String):
        String.getBytes()</LongMessage>
    <Class classname="io.sudheer.practice.StreamCompress" primary="true">
      <SourceLine classname="io.sudheer.practice.StreamCompress" start="6" end="61" sourcefile="StreamCompress.java" sourcepath="com/ge/sample/StreamCompress.java">
        <Message>At StreamCompress.java:[lines 6-61]</Message>
      </SourceLine>
      <Message>In class io.sudheer.practice.StreamCompress</Message>
    </Class>
    <Method classname="io.sudheer.practice.StreamCompress" name="compressStringToFile" signature="(Ljava/lang/String;)V" isStatic="true" primary="true">
      <SourceLine classname="io.sudheer.practice.StreamCompress" start="21" end="25" startBytecode="0" endBytecode="87" sourcefile="StreamCompress.java" sourcepath="com/ge/sample/StreamCompress.java"/>
      <Message>In method io.sudheer.practice.StreamCompress.compressStringToFile(String)</Message>
    </Method>
    <Method classname="java.lang.String" name="getBytes" signature="()[B" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.lang.String" start="956" end="956" startBytecode="0" endBytecode="37" sourcefile="String.java" sourcepath="java/lang/String.java"/>
      <Message>Called method String.getBytes()</Message>
    </Method>
    <SourceLine classname="io.sudheer.practice.StreamCompress" primary="true" start="21" end="21" startBytecode="5" endBytecode="5" sourcefile="StreamCompress.java" sourcepath="com/ge/sample/StreamCompress.java">
      <Message>At StreamCompress.java:[line 21]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="MS_PKGPROTECT" priority="2" rank="18" abbrev="MS" category="MALICIOUS_CODE" instanceHash="39525369006a23cd5883365a0a9b51d2" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="218">
    <ShortMessage>Field should be package protected</ShortMessage>
    <LongMessage>io.sudheer.practice.StreamCompress.out should be package protected</LongMessage>
    <Class classname="io.sudheer.practice.StreamCompress" primary="true">
      <SourceLine classname="io.sudheer.practice.StreamCompress" start="6" end="61" sourcefile="StreamCompress.java" sourcepath="com/ge/sample/StreamCompress.java">
        <Message>At StreamCompress.java:[lines 6-61]</Message>
      </SourceLine>
      <Message>In class io.sudheer.practice.StreamCompress</Message>
    </Class>
    <Field classname="io.sudheer.practice.StreamCompress" name="out" signature="Ljava/io/FileOutputStream;" isStatic="true" primary="true">
      <SourceLine classname="io.sudheer.practice.StreamCompress" sourcefile="StreamCompress.java" sourcepath="com/ge/sample/StreamCompress.java">
        <Message>In StreamCompress.java</Message>
      </SourceLine>
      <Message>Field io.sudheer.practice.StreamCompress.out</Message>
    </Field>
    <SourceLine classname="io.sudheer.practice.StreamCompress" primary="true" start="47" end="47" startBytecode="1" endBytecode="1" sourcefile="StreamCompress.java" sourcepath="com/ge/sample/StreamCompress.java">
      <Message>At StreamCompress.java:[line 47]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DLS_DEAD_LOCAL_STORE" priority="2" rank="17" abbrev="DLS" category="STYLE" instanceHash="49eef99ac4bf6fef5f303747a9de0988" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="563">
    <ShortMessage>Dead store to local variable</ShortMessage>
    <LongMessage>Dead store to y in com.ge.sample.Test.main(String[])</LongMessage>
    <Class classname="com.ge.sample.Test" primary="true">
      <SourceLine classname="com.ge.sample.Test" start="15" end="26" sourcefile="Test.java" sourcepath="com/ge/sample/Test.java">
        <Message>At Test.java:[lines 15-26]</Message>
      </SourceLine>
      <Message>In class com.ge.sample.Test</Message>
    </Class>
    <Method classname="com.ge.sample.Test" name="main" signature="([Ljava/lang/String;)V" isStatic="true" primary="true">
      <SourceLine classname="com.ge.sample.Test" start="18" end="26" startBytecode="0" endBytecode="23" sourcefile="Test.java" sourcepath="com/ge/sample/Test.java"/>
      <Message>In method com.ge.sample.Test.main(String[])</Message>
    </Method>
    <LocalVariable name="y" register="2" pc="17" role="LOCAL_VARIABLE_NAMED">
      <Message>Local variable named y</Message>
    </LocalVariable>
    <SourceLine classname="com.ge.sample.Test" primary="true" start="20" end="20" startBytecode="16" endBytecode="16" sourcefile="Test.java" sourcepath="com/ge/sample/Test.java">
      <Message>At Test.java:[line 20]</Message>
    </SourceLine>
    <Property name="edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.LOCAL_NAME" value="y"/>
    <Property name="edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.NO_LOADS" value="true"/>
  </BugInstance>
  <BugInstance type="DMI_HARDCODED_ABSOLUTE_FILENAME" priority="2" rank="17" abbrev="DMI" category="STYLE" instanceHash="e5335d8f5c5aee30460b670b145dc37c" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="440">
    <ShortMessage>Code contains a hard coded reference to an absolute pathname</ShortMessage>
    <LongMessage>Hard coded reference to an absolute pathname in io.sudheer.practice.TestFileSize.testFileSize(int)</LongMessage>
    <Class classname="io.sudheer.practice.TestFileSize" primary="true">
      <SourceLine classname="io.sudheer.practice.TestFileSize" start="12" end="43" sourcefile="TestFileSize.java" sourcepath="com/ge/sample/TestFileSize.java">
        <Message>At TestFileSize.java:[lines 12-43]</Message>
      </SourceLine>
      <Message>In class io.sudheer.practice.TestFileSize</Message>
    </Class>
    <Method classname="io.sudheer.practice.TestFileSize" name="testFileSize" signature="(I)V" isStatic="true" primary="true">
      <SourceLine classname="io.sudheer.practice.TestFileSize" start="20" end="43" startBytecode="0" endBytecode="134" sourcefile="TestFileSize.java" sourcepath="com/ge/sample/TestFileSize.java"/>
      <Message>In method io.sudheer.practice.TestFileSize.testFileSize(int)</Message>
    </Method>
    <String value="D:/gegdc/SV40298/ActiveProcess/ActiveProcessWorkSpace/sample/src/sample.txt" role="FILE_NAME">
      <Message>File name D:/gegdc/SV40298/ActiveProcess/ActiveProcessWorkSpace/sample/src/sample.txt</Message>
    </String>
    <SourceLine classname="io.sudheer.practice.TestFileSize" primary="true" start="20" end="20" startBytecode="6" endBytecode="6" sourcefile="TestFileSize.java" sourcepath="com/ge/sample/TestFileSize.java">
      <Message>At TestFileSize.java:[line 20]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_DEFAULT_ENCODING" priority="1" rank="19" abbrev="Dm" category="I18N" instanceHash="a4f6a9e48f422a164950ed7e64d7d6e0" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Reliance on default encoding</ShortMessage>
    <LongMessage>Found reliance on default encoding in io.sudheer.practice.TestFileSize.testFileSize(int): new
        java.io.FileReader(File)</LongMessage>
    <Class classname="io.sudheer.practice.TestFileSize" primary="true">
      <SourceLine classname="io.sudheer.practice.TestFileSize" start="12" end="43" sourcefile="TestFileSize.java" sourcepath="com/ge/sample/TestFileSize.java">
        <Message>At TestFileSize.java:[lines 12-43]</Message>
      </SourceLine>
      <Message>In class io.sudheer.practice.TestFileSize</Message>
    </Class>
    <Method classname="io.sudheer.practice.TestFileSize" name="testFileSize" signature="(I)V" isStatic="true" primary="true">
      <SourceLine classname="io.sudheer.practice.TestFileSize" start="20" end="43" startBytecode="0" endBytecode="523" sourcefile="TestFileSize.java" sourcepath="com/ge/sample/TestFileSize.java"/>
      <Message>In method io.sudheer.practice.TestFileSize.testFileSize(int)</Message>
    </Method>
    <Method classname="java.io.FileReader" name="&lt;init&gt;" signature="(Ljava/io/File;)V" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.io.FileReader" start="72" end="73" startBytecode="0" endBytecode="40" sourcefile="FileReader.java" sourcepath="java/io/FileReader.java"/>
      <Message>Called method new java.io.FileReader(File)</Message>
    </Method>
    <SourceLine classname="io.sudheer.practice.TestFileSize" primary="true" start="35" end="35" startBytecode="164" endBytecode="164" sourcefile="TestFileSize.java" sourcepath="com/ge/sample/TestFileSize.java">
      <Message>At TestFileSize.java:[line 35]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_DEFAULT_ENCODING" priority="1" rank="19" abbrev="Dm" category="I18N" instanceHash="69381ca33aecc10fbfc8b3baa2c35394" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Reliance on default encoding</ShortMessage>
    <LongMessage>Found reliance on default encoding in io.sudheer.practice.TestFileSize.testFileSize(int): new
        java.io.FileWriter(File)</LongMessage>
    <Class classname="io.sudheer.practice.TestFileSize" primary="true">
      <SourceLine classname="io.sudheer.practice.TestFileSize" start="12" end="43" sourcefile="TestFileSize.java" sourcepath="com/ge/sample/TestFileSize.java">
        <Message>At TestFileSize.java:[lines 12-43]</Message>
      </SourceLine>
      <Message>In class io.sudheer.practice.TestFileSize</Message>
    </Class>
    <Method classname="io.sudheer.practice.TestFileSize" name="testFileSize" signature="(I)V" isStatic="true" primary="true">
      <SourceLine classname="io.sudheer.practice.TestFileSize" start="20" end="43" startBytecode="0" endBytecode="523" sourcefile="TestFileSize.java" sourcepath="com/ge/sample/TestFileSize.java"/>
      <Message>In method io.sudheer.practice.TestFileSize.testFileSize(int)</Message>
    </Method>
    <Method classname="java.io.FileWriter" name="&lt;init&gt;" signature="(Ljava/io/File;)V" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.io.FileWriter" start="90" end="91" startBytecode="0" endBytecode="40" sourcefile="FileWriter.java" sourcepath="java/io/FileWriter.java"/>
      <Message>Called method new java.io.FileWriter(File)</Message>
    </Method>
    <SourceLine classname="io.sudheer.practice.TestFileSize" primary="true" start="26" end="26" startBytecode="46" endBytecode="46" sourcefile="TestFileSize.java" sourcepath="com/ge/sample/TestFileSize.java">
      <Message>At TestFileSize.java:[line 26]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_STRING_CTOR" priority="2" rank="18" abbrev="Dm" category="PERFORMANCE" instanceHash="92be2bf365c70095cbf363ae7db0dcf4" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method invokes inefficient new String(String) constructor</ShortMessage>
    <LongMessage>io.sudheer.practice.TestFileSize.testFileSize(int) invokes inefficient new String(String) constructor</LongMessage>
    <Class classname="io.sudheer.practice.TestFileSize" primary="true">
      <SourceLine classname="io.sudheer.practice.TestFileSize" start="12" end="43" sourcefile="TestFileSize.java" sourcepath="com/ge/sample/TestFileSize.java">
        <Message>At TestFileSize.java:[lines 12-43]</Message>
      </SourceLine>
      <Message>In class io.sudheer.practice.TestFileSize</Message>
    </Class>
    <Method classname="io.sudheer.practice.TestFileSize" name="testFileSize" signature="(I)V" isStatic="true" primary="true">
      <SourceLine classname="io.sudheer.practice.TestFileSize" start="20" end="43" startBytecode="0" endBytecode="523" sourcefile="TestFileSize.java" sourcepath="com/ge/sample/TestFileSize.java"/>
      <Message>In method io.sudheer.practice.TestFileSize.testFileSize(int)</Message>
    </Method>
    <SourceLine classname="io.sudheer.practice.TestFileSize" primary="true" start="24" end="24" startBytecode="28" endBytecode="28" sourcefile="TestFileSize.java" sourcepath="com/ge/sample/TestFileSize.java">
      <Message>At TestFileSize.java:[line 24]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="BX_UNBOXING_IMMEDIATELY_REBOXED" priority="2" rank="18" abbrev="Bx" category="PERFORMANCE" instanceHash="429619dda6376aba73035fe9bc405ef1" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Boxed value is unboxed and then immediately reboxed</ShortMessage>
    <LongMessage>Boxed value is unboxed and then immediately reboxed in io.sudheer.practice.TestingRanges.main(String[])</LongMessage>
    <Class classname="io.sudheer.practice.TestingRanges" primary="true">
      <SourceLine classname="io.sudheer.practice.TestingRanges" start="10" end="41" sourcefile="TestingRanges.java" sourcepath="com/ge/sample/TestingRanges.java">
        <Message>At TestingRanges.java:[lines 10-41]</Message>
      </SourceLine>
      <Message>In class io.sudheer.practice.TestingRanges</Message>
    </Class>
    <Method classname="io.sudheer.practice.TestingRanges" name="main" signature="([Ljava/lang/String;)V" isStatic="true" primary="true">
      <SourceLine classname="io.sudheer.practice.TestingRanges" start="16" end="41" startBytecode="0" endBytecode="449" sourcefile="TestingRanges.java" sourcepath="com/ge/sample/TestingRanges.java"/>
      <Message>In method io.sudheer.practice.TestingRanges.main(String[])</Message>
    </Method>
    <Method classname="java.lang.Integer" name="valueOf" signature="(I)Ljava/lang/Integer;" isStatic="true" role="METHOD_CALLED">
      <SourceLine classname="java.lang.Integer" start="639" end="642" startBytecode="0" endBytecode="99" sourcefile="Integer.java" sourcepath="java/lang/Integer.java"/>
      <Message>Called method Integer.valueOf(int)</Message>
    </Method>
    <SourceLine classname="io.sudheer.practice.TestingRanges" primary="true" start="32" end="32" startBytecode="89" endBytecode="89" sourcefile="TestingRanges.java" sourcepath="com/ge/sample/TestingRanges.java">
      <Message>At TestingRanges.java:[line 32]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DMI_HARDCODED_ABSOLUTE_FILENAME" priority="2" rank="17" abbrev="DMI" category="STYLE" instanceHash="f674c9189de1892b54ff29089e6c45e9" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="440">
    <ShortMessage>Code contains a hard coded reference to an absolute pathname</ShortMessage>
    <LongMessage>Hard coded reference to an absolute pathname in io.sudheer.practice.ZlibCompression.main(String[])</LongMessage>
    <Class classname="io.sudheer.practice.ZlibCompression" primary="true">
      <SourceLine classname="io.sudheer.practice.ZlibCompression" start="11" end="91" sourcefile="ZlibCompression.java" sourcepath="com/ge/sample/ZlibCompression.java">
        <Message>At ZlibCompression.java:[lines 11-91]</Message>
      </SourceLine>
      <Message>In class io.sudheer.practice.ZlibCompression</Message>
    </Class>
    <Method classname="io.sudheer.practice.ZlibCompression" name="main" signature="([Ljava/lang/String;)V" isStatic="true" primary="true">
      <SourceLine classname="io.sudheer.practice.ZlibCompression" start="85" end="91" startBytecode="0" endBytecode="22" sourcefile="ZlibCompression.java" sourcepath="com/ge/sample/ZlibCompression.java"/>
      <Message>In method io.sudheer.practice.ZlibCompression.main(String[])</Message>
    </Method>
    <String value="D:/gegdc/SV40298/ActiveProcess/ActiveProcessWorkSpace/sample/src/decompressedC++.txt" role="FILE_NAME">
      <Message>File name D:/gegdc/SV40298/ActiveProcess/ActiveProcessWorkSpace/sample/src/decompressedC++.txt</Message>
    </String>
    <SourceLine classname="io.sudheer.practice.ZlibCompression" primary="true" start="90" end="90" startBytecode="45" endBytecode="45" sourcefile="ZlibCompression.java" sourcepath="com/ge/sample/ZlibCompression.java">
      <Message>At ZlibCompression.java:[line 90]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DMI_HARDCODED_ABSOLUTE_FILENAME" priority="2" rank="17" abbrev="DMI" category="STYLE" instanceHash="ef36254943fda744daa5127c4d0f282b" instanceOccurrenceNum="0" instanceOccurrenceMax="0" cweid="440">
    <ShortMessage>Code contains a hard coded reference to an absolute pathname</ShortMessage>
    <LongMessage>Hard coded reference to an absolute pathname in io.sudheer.practice.ZlibCompression.main(String[])</LongMessage>
    <Class classname="io.sudheer.practice.ZlibCompression" primary="true">
      <SourceLine classname="io.sudheer.practice.ZlibCompression" start="11" end="91" sourcefile="ZlibCompression.java" sourcepath="com/ge/sample/ZlibCompression.java">
        <Message>At ZlibCompression.java:[lines 11-91]</Message>
      </SourceLine>
      <Message>In class io.sudheer.practice.ZlibCompression</Message>
    </Class>
    <Method classname="io.sudheer.practice.ZlibCompression" name="main" signature="([Ljava/lang/String;)V" isStatic="true" primary="true">
      <SourceLine classname="io.sudheer.practice.ZlibCompression" start="85" end="91" startBytecode="0" endBytecode="22" sourcefile="ZlibCompression.java" sourcepath="com/ge/sample/ZlibCompression.java"/>
      <Message>In method io.sudheer.practice.ZlibCompression.main(String[])</Message>
    </Method>
    <String value="D:/gegdc/SV40298/jboss4.0.3/server/default/log/opt/shared/data/tdmdataaccess/temp/tdm-tmp3-1393577808.tzf" role="FILE_NAME">
      <Message>File name D:/gegdc/SV40298/jboss4.0.3/server/default/log/opt/shared/data/tdmdataaccess/temp/tdm-tmp3-1393577808.tzf</Message>
    </String>
    <SourceLine classname="io.sudheer.practice.ZlibCompression" primary="true" start="85" end="85" startBytecode="6" endBytecode="6" sourcefile="ZlibCompression.java" sourcepath="com/ge/sample/ZlibCompression.java">
      <Message>At ZlibCompression.java:[line 85]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_DEFAULT_ENCODING" priority="1" rank="19" abbrev="Dm" category="I18N" instanceHash="d248535c124c85c0c1627ecfca3b078b" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Reliance on default encoding</ShortMessage>
    <LongMessage>Found reliance on default encoding in io.sudheer.practice.ZlibCompression.compressStringToFile(String,
        File): String.getBytes()</LongMessage>
    <Class classname="io.sudheer.practice.ZlibCompression" primary="true">
      <SourceLine classname="io.sudheer.practice.ZlibCompression" start="11" end="91" sourcefile="ZlibCompression.java" sourcepath="com/ge/sample/ZlibCompression.java">
        <Message>At ZlibCompression.java:[lines 11-91]</Message>
      </SourceLine>
      <Message>In class io.sudheer.practice.ZlibCompression</Message>
    </Class>
    <Method classname="io.sudheer.practice.ZlibCompression" name="compressStringToFile" signature="(Ljava/lang/String;Ljava/io/File;)V" isStatic="true" primary="true">
      <SourceLine classname="io.sudheer.practice.ZlibCompression" start="41" end="47" startBytecode="0" endBytecode="133" sourcefile="ZlibCompression.java" sourcepath="com/ge/sample/ZlibCompression.java"/>
      <Message>In method io.sudheer.practice.ZlibCompression.compressStringToFile(String, File)</Message>
    </Method>
    <Method classname="java.lang.String" name="getBytes" signature="()[B" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.lang.String" start="956" end="956" startBytecode="0" endBytecode="37" sourcefile="String.java" sourcepath="java/lang/String.java"/>
      <Message>Called method String.getBytes()</Message>
    </Method>
    <SourceLine classname="io.sudheer.practice.ZlibCompression" primary="true" start="41" end="41" startBytecode="5" endBytecode="5" sourcefile="ZlibCompression.java" sourcepath="com/ge/sample/ZlibCompression.java">
      <Message>At ZlibCompression.java:[line 41]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="DM_DEFAULT_ENCODING" priority="1" rank="19" abbrev="Dm" category="I18N" instanceHash="ad46f22665d83ea65f8c2f69a878d9f9" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Reliance on default encoding</ShortMessage>
    <LongMessage>Found reliance on default encoding in
        io.sudheer.practice.ZlibCompression.compressStringToStream(String, OutputStream): String.getBytes()</LongMessage>
    <Class classname="io.sudheer.practice.ZlibCompression" primary="true">
      <SourceLine classname="io.sudheer.practice.ZlibCompression" start="11" end="91" sourcefile="ZlibCompression.java" sourcepath="com/ge/sample/ZlibCompression.java">
        <Message>At ZlibCompression.java:[lines 11-91]</Message>
      </SourceLine>
      <Message>In class io.sudheer.practice.ZlibCompression</Message>
    </Class>
    <Method classname="io.sudheer.practice.ZlibCompression" name="compressStringToStream" signature="(Ljava/lang/String;Ljava/io/OutputStream;)V" isStatic="true" primary="true">
      <SourceLine classname="io.sudheer.practice.ZlibCompression" start="30" end="36" startBytecode="0" endBytecode="126" sourcefile="ZlibCompression.java" sourcepath="com/ge/sample/ZlibCompression.java"/>
      <Message>In method io.sudheer.practice.ZlibCompression.compressStringToStream(String, OutputStream)</Message>
    </Method>
    <Method classname="java.lang.String" name="getBytes" signature="()[B" isStatic="false" role="METHOD_CALLED">
      <SourceLine classname="java.lang.String" start="956" end="956" startBytecode="0" endBytecode="37" sourcefile="String.java" sourcepath="java/lang/String.java"/>
      <Message>Called method String.getBytes()</Message>
    </Method>
    <SourceLine classname="io.sudheer.practice.ZlibCompression" primary="true" start="30" end="30" startBytecode="5" endBytecode="5" sourcefile="ZlibCompression.java" sourcepath="com/ge/sample/ZlibCompression.java">
      <Message>At ZlibCompression.java:[line 30]</Message>
    </SourceLine>
  </BugInstance>
  <BugInstance type="OBL_UNSATISFIED_OBLIGATION_EXCEPTION_EDGE" priority="2" rank="20" abbrev="OBL" category="EXPERIMENTAL" instanceHash="68b8abf7c7e8f2a35c9a7d25e12b1405" instanceOccurrenceNum="0" instanceOccurrenceMax="0">
    <ShortMessage>Method may fail to clean up stream or resource on checked exception</ShortMessage>
    <LongMessage>io.sudheer.practice.ZlibCompression.compressFile(File, File) may fail to clean up java.io.InputStream
        on checked exception</LongMessage>
    <Class classname="io.sudheer.practice.ZlibCompression" primary="true">
      <SourceLine classname="io.sudheer.practice.ZlibCompression" start="11" end="91" sourcefile="ZlibCompression.java" sourcepath="com/ge/sample/ZlibCompression.java">
        <Message>At ZlibCompression.java:[lines 11-91]</Message>
      </SourceLine>
      <Message>In class io.sudheer.practice.ZlibCompression</Message>
    </Class>
    <Method classname="io.sudheer.practice.ZlibCompression" name="compressFile" signature="(Ljava/io/File;Ljava/io/File;)V" isStatic="true" primary="true">
      <SourceLine classname="io.sudheer.practice.ZlibCompression" start="19" end="25" startBytecode="0" endBytecode="130" sourcefile="ZlibCompression.java" sourcepath="com/ge/sample/ZlibCompression.java"/>
      <Message>In method io.sudheer.practice.ZlibCompression.compressFile(File, File)</Message>
    </Method>
    <Class classname="java.io.InputStream" role="CLASS_REFTYPE">
      <SourceLine classname="java.io.InputStream" start="45" end="363" sourcefile="InputStream.java" sourcepath="java/io/InputStream.java">
        <Message>At InputStream.java:[lines 45-363]</Message>
      </SourceLine>
      <Message>Reference type java.io.InputStream</Message>
    </Class>
    <Int value="1" role="INT_OBLIGATIONS_REMAINING">
      <Message>1 instances of obligation remaining</Message>
    </Int>
    <SourceLine classname="io.sudheer.practice.ZlibCompression" primary="true" start="19" end="19" startBytecode="5" endBytecode="5" sourcefile="ZlibCompression.java" sourcepath="com/ge/sample/ZlibCompression.java" role="SOURCE_LINE_OBLIGATION_CREATED">
      <Message>Obligation to clean up resource created at ZlibCompression.java:[line 19] is not discharged</Message>
    </SourceLine>
    <SourceLine classname="io.sudheer.practice.ZlibCompression" start="20" end="20" startBytecode="9" endBytecode="9" sourcefile="ZlibCompression.java" sourcepath="com/ge/sample/ZlibCompression.java" role="SOURCE_LINE_PATH_CONTINUES">
      <Message>Path continues at ZlibCompression.java:[line 20]</Message>
    </SourceLine>
    <String value="{InputStream x 1}" role="STRING_REMAINING_OBLIGATIONS">
      <Message>Remaining obligations: {InputStream x 1}</Message>
    </String>
  </BugInstance>
  <BugCategory category="MALICIOUS_CODE">
    <Description>Malicious code vulnerability</Description>
  </BugCategory>
  <BugCategory category="STYLE">
    <Description>Dodgy code</Description>
  </BugCategory>
  <BugCategory category="BAD_PRACTICE">
    <Description>Bad practice</Description>
  </BugCategory>
  <BugCategory category="CORRECTNESS">
    <Description>Correctness</Description>
  </BugCategory>
  <BugCategory category="I18N">
    <Description>Internationalization</Description>
  </BugCategory>
  <BugCategory category="PERFORMANCE">
    <Description>Performance</Description>
  </BugCategory>
  <BugCategory category="EXPERIMENTAL">
    <Description>Experimental</Description>
  </BugCategory>
  <BugPattern type="DM_NEXTINT_VIA_NEXTDOUBLE" abbrev="Dm" category="PERFORMANCE">
    <ShortDescription>Use the nextInt method of Random rather than nextDouble to generate a random integer</ShortDescription>
    <Details><![CDATA[

  <p>If <code>r</code> is a <code>java.util.Random</code>, you can generate a random number from <code>0</code> to <code>n-1</code>
using <code>r.nextInt(n)</code>, rather than using <code>(int)(r.nextDouble() * n)</code>.
</p>
<p>The argument to nextInt must be positive. If, for example, you want to generate a random
value from -99 to 0, use <code>-r.nextInt(100)</code>.
</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="DM_STRING_CTOR" abbrev="Dm" category="PERFORMANCE">
    <ShortDescription>Method invokes inefficient new String(String) constructor</ShortDescription>
    <Details><![CDATA[

  <p> Using the <code>java.lang.String(String)</code> constructor wastes memory
  because the object so constructed will be functionally indistinguishable
  from the <code>String</code> passed as a parameter.&nbsp; Just use the
  argument <code>String</code> directly.</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="SR_NOT_CHECKED" abbrev="RR" category="BAD_PRACTICE">
    <ShortDescription>Method ignores results of InputStream.skip()</ShortDescription>
    <Details><![CDATA[

  <p> This method ignores the return value of
  <code>java.io.InputStream.skip()</code> which can skip multiple bytes.&nbsp;
  If the return value is not checked, the caller will not be able to correctly
  handle the case where fewer bytes were skipped than the caller requested.&nbsp;
  This is a particularly insidious kind of bug, because in many programs,
  skips from input streams usually do skip the full amount of data requested,
  causing the program to fail only sporadically. With Buffered streams, however,
  skip() will only skip data in the buffer, and will routinely fail to skip the
  requested number of bytes.</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="NP_NULL_PARAM_DEREF_NONVIRTUAL" abbrev="NP" category="CORRECTNESS">
    <ShortDescription>Non-virtual method call passes null for non-null parameter</ShortDescription>
    <Details><![CDATA[
      
      <p>
      A possibly-null value is passed to a non-null method parameter.
    Either the parameter is annotated as a parameter that should
    always be non-null, or analysis has shown that it will always be
    dereferenced.
      </p>
      
   ]]></Details>
  </BugPattern>
  <BugPattern type="BX_UNBOXING_IMMEDIATELY_REBOXED" abbrev="Bx" category="PERFORMANCE">
    <ShortDescription>Boxed value is unboxed and then immediately reboxed</ShortDescription>
    <Details><![CDATA[

  <p>A boxed value is unboxed and then immediately reboxed.
</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="DMI_INVOKING_TOSTRING_ON_ARRAY" abbrev="USELESS_STRING" category="CORRECTNESS">
    <ShortDescription>Invocation of toString on an array</ShortDescription>
    <Details><![CDATA[

<p>
The code invokes toString on an array, which will generate a fairly useless result
such as [C@16f0472. Consider using Arrays.toString to convert the array into a readable
String that gives the contents of the array. See Programming Puzzlers, chapter 3, puzzle 12.
</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="DMI_HARDCODED_ABSOLUTE_FILENAME" abbrev="DMI" category="STYLE">
    <ShortDescription>Code contains a hard coded reference to an absolute pathname</ShortDescription>
    <Details><![CDATA[

<p>This code constructs a File object using a hard coded to an absolute pathname
(e.g., <code>new File("/home/dannyc/workspace/j2ee/src/share/com/sun/enterprise/deployment");</code>
</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="OBL_UNSATISFIED_OBLIGATION_EXCEPTION_EDGE" abbrev="OBL" category="EXPERIMENTAL">
    <ShortDescription>Method may fail to clean up stream or resource on checked exception</ShortDescription>
    <Details><![CDATA[
          
          <p>
          This method may fail to clean up (close, dispose of) a stream,
          database object, or other
          resource requiring an explicit cleanup operation.
          </p>

          <p>
          In general, if a method opens a stream or other resource,
          the method should use a try/finally block to ensure that
          the stream or resource is cleaned up before the method
          returns.
          </p>

          <p>
          This bug pattern is essentially the same as the
          OS_OPEN_STREAM and ODR_OPEN_DATABASE_RESOURCE
          bug patterns, but is based on a different
          (and hopefully better) static analysis technique.
          We are interested is getting feedback about the
          usefulness of this bug pattern.
          To send feedback, either:
          </p>
          <ul>
            <li>send email to findbugs@cs.umd.edu</li>
            <li>file a bug report: <a href="http://findbugs.sourceforge.net/reportingBugs.html">http://findbugs.sourceforge.net/reportingBugs.html</a></li>
          </ul>

          <p>
          In particular,
          the false-positive suppression heuristics for this
          bug pattern have not been extensively tuned, so
          reports about false positives are helpful to us.
          </p>

          <p>
          See Weimer and Necula, <i>Finding and Preventing Run-Time Error Handling Mistakes</i>, for
          a description of the analysis technique.
          </p>
          
      ]]></Details>
  </BugPattern>
  <BugPattern type="DM_DEFAULT_ENCODING" abbrev="Dm" category="I18N">
    <ShortDescription>Reliance on default encoding</ShortDescription>
    <Details><![CDATA[

<p> Found a call to a method which will perform a byte to String (or String to byte) conversion, and will assume that the default platform encoding is suitable. This will cause the application behaviour to vary between platforms. Use an alternative API and specify a charset name or Charset object explicitly.  </p>

      ]]></Details>
  </BugPattern>
  <BugPattern type="IL_INFINITE_LOOP" abbrev="IL" category="CORRECTNESS">
    <ShortDescription>An apparent infinite loop</ShortDescription>
    <Details><![CDATA[

<p>This loop doesn't seem to have a way to terminate (other than by perhaps
throwing an exception).</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="MS_PKGPROTECT" abbrev="MS" category="MALICIOUS_CODE">
    <ShortDescription>Field should be package protected</ShortDescription>
    <Details><![CDATA[

  <p> A mutable static field could be changed by malicious code or
   by accident.
   The field could be made package protected to avoid
   this vulnerability.</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="NP_NULL_PARAM_DEREF" abbrev="NP" category="CORRECTNESS">
    <ShortDescription>Method call passes null for non-null parameter</ShortDescription>
    <Details><![CDATA[
      
      <p>
      This method call passes a null value for a non-null method parameter.
    Either the parameter is annotated as a parameter that should
    always be non-null, or analysis has shown that it will always be
    dereferenced.
      </p>
      
   ]]></Details>
  </BugPattern>
  <BugPattern type="SBSC_USE_STRINGBUFFER_CONCATENATION" abbrev="SBSC" category="PERFORMANCE">
    <ShortDescription>Method concatenates strings using + in a loop</ShortDescription>
    <Details><![CDATA[

<p> The method seems to be building a String using concatenation in a loop.
In each iteration, the String is converted to a StringBuffer/StringBuilder,
   appended to, and converted back to a String.
   This can lead to a cost quadratic in the number of iterations,
   as the growing string is recopied in each iteration. </p>

<p>Better performance can be obtained by using
a StringBuffer (or StringBuilder in Java 1.5) explicitly.</p>

<p> For example:</p>
<pre>
  // This is bad
  String s = "";
  for (int i = 0; i &lt; field.length; ++i) {
    s = s + field[i];
  }

  // This is better
  StringBuffer buf = new StringBuffer();
  for (int i = 0; i &lt; field.length; ++i) {
    buf.append(field[i]);
  }
  String s = buf.toString();
</pre>

    ]]></Details>
  </BugPattern>
  <BugPattern type="DLS_DEAD_LOCAL_STORE" abbrev="DLS" category="STYLE">
    <ShortDescription>Dead store to local variable</ShortDescription>
    <Details><![CDATA[

<p>
This instruction assigns a value to a local variable,
but the value is not read or used in any subsequent instruction.
Often, this indicates an error, because the value computed is never
used.
</p>
<p>
Note that Sun's javac compiler often generates dead stores for
final local variables.  Because FindBugs is a bytecode-based tool,
there is no easy way to eliminate these false positives.
</p>

    ]]></Details>
  </BugPattern>
  <BugPattern type="DM_BOXED_PRIMITIVE_TOSTRING" abbrev="Bx" category="PERFORMANCE">
    <ShortDescription>Method allocates a boxed primitive just to call toString</ShortDescription>
    <Details><![CDATA[

  <p>A boxed primitive is allocated just to call toString(). It is more effective to just use the static
  form of toString which takes the primitive value. So,</p>
  <table>
     <tr><th>Replace...</th><th>With this...</th></tr>
     <tr><td>new Integer(1).toString()</td><td>Integer.toString(1)</td></tr>
     <tr><td>new Long(1).toString()</td><td>Long.toString(1)</td></tr>
     <tr><td>new Float(1.0).toString()</td><td>Float.toString(1.0)</td></tr>
     <tr><td>new Double(1.0).toString()</td><td>Double.toString(1.0)</td></tr>
     <tr><td>new Byte(1).toString()</td><td>Byte.toString(1)</td></tr>
     <tr><td>new Short(1).toString()</td><td>Short.toString(1)</td></tr>
     <tr><td>new Boolean(true).toString()</td><td>Boolean.toString(true)</td></tr>
  </table>

    ]]></Details>
  </BugPattern>
  <BugCode abbrev="RR">
    <Description>Method ignores results of InputStream.read()</Description>
  </BugCode>
  <BugCode abbrev="SBSC">
    <Description>String concatenation in loop using + operator</Description>
  </BugCode>
  <BugCode abbrev="Bx">
    <Description>Questionable Boxing of primitive value</Description>
  </BugCode>
  <BugCode abbrev="Dm">
    <Description>Dubious method used</Description>
  </BugCode>
  <BugCode abbrev="IL">
    <Description>Infinite Loop</Description>
  </BugCode>
  <BugCode abbrev="USELESS_STRING">
    <Description>Useless/non-informative string generated</Description>
  </BugCode>
  <BugCode abbrev="OBL">
    <Description>Unsatisfied obligation to clean up stream or resource</Description>
  </BugCode>
  <BugCode abbrev="DLS" cweid="563">
    <Description>Dead local store</Description>
  </BugCode>
  <BugCode abbrev="NP" cweid="476">
    <Description>Null pointer dereference</Description>
  </BugCode>
  <BugCode abbrev="DMI" cweid="440">
    <Description>Dubious method invocation</Description>
  </BugCode>
  <BugCode abbrev="MS" cweid="218">
    <Description>Mutable static field</Description>
  </BugCode>
  <Errors errors="0" missingClasses="0"></Errors>
  <FindBugsSummary timestamp="Wed, 28 Oct 2015 15:22:55 +0530" total_classes="37" referenced_classes="109" total_bugs="39" total_size="1353" num_packages="1" java_version="1.7.0_55" vm_version="24.55-b03" cpu_seconds="6.19" clock_seconds="4.57" peak_mbytes="60.49" alloc_mbytes="247.50" gc_seconds="0.51" priority_2="24" priority_1="15">
    <FileStats path="com/ge/sample/BackgroundJob.java" bugCount="0" size="32"/>
    <FileStats path="com/ge/sample/Builder.java" bugCount="2" size="30" bugHash="42688995fc95e700e7f808b5bd3e6e01"/>
    <FileStats path="com/ge/sample/CheckEnv.java" bugCount="1" size="36" bugHash="5f7a7ffac95b41a5e92e833cfe80cf05"/>
    <FileStats path="com/ge/sample/Compress.java" bugCount="1" size="25" bugHash="7c984454bac6e378e4a3a171cbebbc04"/>
    <FileStats path="com/ge/sample/Compress2.java" bugCount="3" size="44" bugHash="3d40b691f8550e76c6a1aed548ba789f"/>
    <FileStats path="com/ge/sample/CompressionTest.java" bugCount="1" size="99" bugHash="e04e34e76bf809a0ccb0d3591dd82781"/>
    <FileStats path="com/ge/sample/CountLines.java" bugCount="3" size="27" bugHash="547551a451850d701c1eaa50d4611c90"/>
    <FileStats path="com/ge/sample/DateFormat.java" bugCount="1" size="17" bugHash="61436cb5ac5a0a337fba2f4ac9c84d15"/>
    <FileStats path="com/ge/sample/DateTime.java" bugCount="0" size="17"/>
    <FileStats path="com/ge/sample/Fibonacci.java" bugCount="0" size="19"/>
    <FileStats path="com/ge/sample/FilePath.java" bugCount="0" size="8"/>
    <FileStats path="com/ge/sample/FindBestScan.java" bugCount="0" size="16"/>
    <FileStats path="com/ge/sample/GetIntRange.java" bugCount="2" size="135" bugHash="2cdd918a0cba8f44680b22348d7b543a"/>
    <FileStats path="com/ge/sample/GetRange.java" bugCount="2" size="140" bugHash="322b7164c4ab715a050dddffe55c2238"/>
    <FileStats path="com/ge/sample/GetScanRange.java" bugCount="0" size="124"/>
    <FileStats path="com/ge/sample/GetScanRange2.java" bugCount="0" size="130"/>
    <FileStats path="com/ge/sample/InstanceName.java" bugCount="0" size="13"/>
    <FileStats path="com/ge/sample/MoveCursor.java" bugCount="1" size="17" bugHash="771fd3701c73ac792aea49b917591558"/>
    <FileStats path="com/ge/sample/PrimeTest.java" bugCount="3" size="25" bugHash="f943bfccfe81ed60dfe352b7407e003a"/>
    <FileStats path="com/ge/sample/RegexPattern.java" bugCount="0" size="14"/>
    <FileStats path="com/ge/sample/Replace.java" bugCount="0" size="8"/>
    <FileStats path="com/ge/sample/ReplaceWithMaxScan.java" bugCount="1" size="140" bugHash="7a116c104e17d566302a3f5b47d198b3"/>
    <FileStats path="com/ge/sample/Sanitize.java" bugCount="0" size="10"/>
    <FileStats path="com/ge/sample/SbAppend.java" bugCount="1" size="11" bugHash="5f5eb7d704fd73f300a8cbec3ed3bee8"/>
    <FileStats path="com/ge/sample/ScanNumber.java" bugCount="1" size="26" bugHash="f0e816a6d4db50f9735bb44fc50366c0"/>
    <FileStats path="com/ge/sample/Solution.java" bugCount="0" size="17"/>
    <FileStats path="com/ge/sample/StrBuilder.java" bugCount="0" size="8"/>
    <FileStats path="com/ge/sample/StreamCompress.java" bugCount="5" size="43" bugHash="b01485af490bfa5b4eb8f17516d10324"/>
    <FileStats path="com/ge/sample/Test.java" bugCount="1" size="11" bugHash="bdc8872f0162ea6e635a4d836605b1d0"/>
    <FileStats path="com/ge/sample/TestFileSize.java" bugCount="4" size="26" bugHash="af1b71017427ed250082a967c3cc23b6"/>
    <FileStats path="com/ge/sample/TestingRanges.java" bugCount="1" size="26" bugHash="1c871dc86f48b3062a6a3d95433e79e0"/>
    <FileStats path="com/ge/sample/TimeLog.java" bugCount="0" size="8"/>
    <FileStats path="com/ge/sample/TimestampTest.java" bugCount="0" size="10"/>
    <FileStats path="com/ge/sample/ZlibCompression.java" bugCount="5" size="41" bugHash="fbdb7da8b596f27e652220edd925e40b"/>
    <PackageStats package="com.ge.sample" total_bugs="39" total_types="37" total_size="1353" priority_2="24" priority_1="15">
      <ClassStats class="io.sudheer.practice.BackgroundJob" sourceFile="BackgroundJob.java" interface="false" size="21" bugs="0"/>
      <ClassStats class="io.sudheer.practice.BackgroundJob$1" sourceFile="BackgroundJob.java" interface="false" size="11" bugs="0"/>
      <ClassStats class="io.sudheer.practice.Builder" sourceFile="Builder.java" interface="false" size="30" bugs="2" priority_2="2"/>
      <ClassStats class="io.sudheer.practice.CheckEnv" sourceFile="CheckEnv.java" interface="false" size="36" bugs="1" priority_2="1"/>
      <ClassStats class="io.sudheer.practice.Compress" sourceFile="Compress.java" interface="false" size="25" bugs="1" priority_2="1"/>
      <ClassStats class="io.sudheer.practice.Compress2" sourceFile="Compress2.java" interface="false" size="44" bugs="3" priority_2="2" priority_1="1"/>
      <ClassStats class="io.sudheer.practice.CompressionTest" sourceFile="CompressionTest.java" interface="false" size="15" bugs="0"/>
      <ClassStats class="com.ge.sample.Compressor" sourceFile="CompressionTest.java" interface="false" size="50" bugs="0"/>
      <ClassStats class="com.ge.sample.Console" sourceFile="CompressionTest.java" interface="false" size="34" bugs="1" priority_2="1"/>
      <ClassStats class="io.sudheer.practice.CountLines" sourceFile="CountLines.java" interface="false" size="27" bugs="3" priority_2="1" priority_1="2"/>
      <ClassStats class="io.sudheer.practice.DateFormat" sourceFile="DateFormat.java" interface="false" size="17" bugs="1" priority_2="1"/>
      <ClassStats class="io.sudheer.practice.DateTime" sourceFile="DateTime.java" interface="false" size="17" bugs="0"/>
      <ClassStats class="io.sudheer.practice.Fibonacci" sourceFile="Fibonacci.java" interface="false" size="19" bugs="0"/>
      <ClassStats class="com.ge.sample.FilePath" sourceFile="FilePath.java" interface="false" size="8" bugs="0"/>
      <ClassStats class="com.ge.sample.FindBestScan" sourceFile="FindBestScan.java" interface="false" size="16" bugs="0"/>
      <ClassStats class="io.sudheer.practice.GetIntRange" sourceFile="GetIntRange.java" interface="false" size="135" bugs="2" priority_2="1" priority_1="1"/>
      <ClassStats class="io.sudheer.practice.GetRange" sourceFile="GetRange.java" interface="false" size="140" bugs="2" priority_2="1" priority_1="1"/>
      <ClassStats class="io.sudheer.practice.GetScanRange" sourceFile="GetScanRange.java" interface="false" size="124" bugs="0"/>
      <ClassStats class="io.sudheer.practice.GetScanRange2" sourceFile="GetScanRange2.java" interface="false" size="130" bugs="0"/>
      <ClassStats class="io.sudheer.practice.InstanceName" sourceFile="InstanceName.java" interface="false" size="13" bugs="0"/>
      <ClassStats class="io.sudheer.practice.MoveCursor" sourceFile="MoveCursor.java" interface="false" size="17" bugs="1" priority_2="1"/>
      <ClassStats class="io.sudheer.practice.PrimeTest" sourceFile="PrimeTest.java" interface="false" size="25" bugs="3" priority_1="3"/>
      <ClassStats class="com.ge.sample.RegexPattern" sourceFile="RegexPattern.java" interface="false" size="14" bugs="0"/>
      <ClassStats class="io.sudheer.practice.Replace" sourceFile="Replace.java" interface="false" size="8" bugs="0"/>
      <ClassStats class="io.sudheer.practice.ReplaceWithMaxScan" sourceFile="ReplaceWithMaxScan.java" interface="false" size="140" bugs="1" priority_2="1"/>
      <ClassStats class="io.sudheer.practice.Sanitize" sourceFile="Sanitize.java" interface="false" size="10" bugs="0"/>
      <ClassStats class="com.ge.sample.SbAppend" sourceFile="SbAppend.java" interface="false" size="11" bugs="1" priority_1="1"/>
      <ClassStats class="io.sudheer.practice.ScanNumber" sourceFile="ScanNumber.java" interface="false" size="26" bugs="1" priority_2="1"/>
      <ClassStats class="com.ge.sample.Solution" sourceFile="Solution.java" interface="false" size="17" bugs="0"/>
      <ClassStats class="com.ge.sample.StrBuilder" sourceFile="StrBuilder.java" interface="false" size="8" bugs="0"/>
      <ClassStats class="io.sudheer.practice.StreamCompress" sourceFile="StreamCompress.java" interface="false" size="43" bugs="5" priority_2="3" priority_1="2"/>
      <ClassStats class="com.ge.sample.Test" sourceFile="Test.java" interface="false" size="11" bugs="1" priority_2="1"/>
      <ClassStats class="io.sudheer.practice.TestFileSize" sourceFile="TestFileSize.java" interface="false" size="26" bugs="4" priority_2="2" priority_1="2"/>
      <ClassStats class="io.sudheer.practice.TestingRanges" sourceFile="TestingRanges.java" interface="false" size="26" bugs="1" priority_2="1"/>
      <ClassStats class="io.sudheer.practice.TimeLog" sourceFile="TimeLog.java" interface="false" size="8" bugs="0"/>
      <ClassStats class="com.ge.sample.TimestampTest" sourceFile="TimestampTest.java" interface="false" size="10" bugs="0"/>
      <ClassStats class="io.sudheer.practice.ZlibCompression" sourceFile="ZlibCompression.java" interface="false" size="41" bugs="5" priority_2="3" priority_1="2"/>
    </PackageStats>
    <FindBugsProfile>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.ClassInfoAnalysisEngine" totalMilliseconds="416" invocations="697" avgMicrosecondsPerInvocation="597" maxMicrosecondsPerInvocation="50960" standardDeviationMircosecondsPerInvocation="2364"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.ClassDataAnalysisEngine" totalMilliseconds="409" invocations="699" avgMicrosecondsPerInvocation="586" maxMicrosecondsPerInvocation="6233" standardDeviationMircosecondsPerInvocation="361"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.ValueNumberDataflowFactory" totalMilliseconds="378" invocations="126" avgMicrosecondsPerInvocation="3001" maxMicrosecondsPerInvocation="112322" standardDeviationMircosecondsPerInvocation="11365"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.TypeDataflowFactory" totalMilliseconds="259" invocations="126" avgMicrosecondsPerInvocation="2061" maxMicrosecondsPerInvocation="31444" standardDeviationMircosecondsPerInvocation="5301"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindRefComparison$SpecialTypeAnalysis" totalMilliseconds="214" invocations="111" avgMicrosecondsPerInvocation="1929" maxMicrosecondsPerInvocation="82646" standardDeviationMircosecondsPerInvocation="8396"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.IsNullValueDataflowFactory" totalMilliseconds="190" invocations="114" avgMicrosecondsPerInvocation="1669" maxMicrosecondsPerInvocation="31589" standardDeviationMircosecondsPerInvocation="4846"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.UnconditionalValueDerefDataflowFactory" totalMilliseconds="157" invocations="114" avgMicrosecondsPerInvocation="1379" maxMicrosecondsPerInvocation="27497" standardDeviationMircosecondsPerInvocation="4111"/>
      <ClassProfile name="edu.umd.cs.findbugs.OpcodeStack$JumpInfoFactory" totalMilliseconds="135" invocations="381" avgMicrosecondsPerInvocation="354" maxMicrosecondsPerInvocation="10058" standardDeviationMircosecondsPerInvocation="805"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FieldItemSummary" totalMilliseconds="131" invocations="109" avgMicrosecondsPerInvocation="1205" maxMicrosecondsPerInvocation="18599" standardDeviationMircosecondsPerInvocation="2364"/>
      <ClassProfile name="edu.umd.cs.findbugs.ba.npe.NullDerefAndRedundantComparisonFinder" totalMilliseconds="119" invocations="114" avgMicrosecondsPerInvocation="1050" maxMicrosecondsPerInvocation="15582" standardDeviationMircosecondsPerInvocation="2170"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindNoSideEffectMethods" totalMilliseconds="99" invocations="109" avgMicrosecondsPerInvocation="911" maxMicrosecondsPerInvocation="8606" standardDeviationMircosecondsPerInvocation="1434"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.StreamResourceTracker" totalMilliseconds="97" invocations="123" avgMicrosecondsPerInvocation="793" maxMicrosecondsPerInvocation="6877" standardDeviationMircosecondsPerInvocation="1367"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.CFGFactory" totalMilliseconds="87" invocations="114" avgMicrosecondsPerInvocation="769" maxMicrosecondsPerInvocation="15351" standardDeviationMircosecondsPerInvocation="1890"/>
      <ClassProfile name="edu.umd.cs.findbugs.util.TopologicalSort" totalMilliseconds="76" invocations="663" avgMicrosecondsPerInvocation="115" maxMicrosecondsPerInvocation="7033" standardDeviationMircosecondsPerInvocation="403"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.MethodGenFactory" totalMilliseconds="70" invocations="114" avgMicrosecondsPerInvocation="616" maxMicrosecondsPerInvocation="51932" standardDeviationMircosecondsPerInvocation="4834"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.ConstantDataflowFactory" totalMilliseconds="60" invocations="114" avgMicrosecondsPerInvocation="534" maxMicrosecondsPerInvocation="11932" standardDeviationMircosecondsPerInvocation="1652"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.FindOpenStream" totalMilliseconds="57" invocations="37" avgMicrosecondsPerInvocation="1552" maxMicrosecondsPerInvocation="9849" standardDeviationMircosecondsPerInvocation="2188"/>
      <ClassProfile name="edu.umd.cs.findbugs.classfile.engine.bcel.JavaClassAnalysisEngine" totalMilliseconds="54" invocations="153" avgMicrosecondsPerInvocation="356" maxMicrosecondsPerInvocation="23837" standardDeviationMircosecondsPerInvocation="1924"/>
      <ClassProfile name="edu.umd.cs.findbugs.detect.NoteDirectlyRelevantTypeQualifiers" totalMilliseconds="43" invocations="109" avgMicrosecondsPerInvocation="399" maxMicrosecondsPerInvocation="5389" standardDeviationMircosecondsPerInvocation="707"/>
    </FindBugsProfile>
  </FindBugsSummary>
  <ClassFeatures></ClassFeatures>
  <History></History>
</BugCollection>
